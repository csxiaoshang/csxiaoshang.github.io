{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"themes/icarus/source/css/back-to-top.css","path":"css/back-to-top.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/insight.css","path":"css/insight.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/progressbar.css","path":"css/progressbar.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/search.css","path":"css/search.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/favicon.svg","path":"images/favicon.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/og_image.png","path":"images/og_image.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/thumbnail.svg","path":"images/thumbnail.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/back-to-top.js","path":"js/back-to-top.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/images/head.jpeg","path":"images/head.jpeg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/icarus/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1575291969570},{"_id":"themes/icarus/_config.yml","hash":"1e1c441f18ef5b25874958fe35c6d416a74ba06d","modified":1575383732816},{"_id":"themes/icarus/package.json","hash":"e9bcb9fcf69462d5b03c7870eb13ab28aa7933c7","modified":1575291969574},{"_id":"themes/icarus/_config.old.yml","hash":"3fa2be2cbaf058736b3149fc6b3ea877d1f1e559","modified":1575345454435},{"_id":"themes/icarus/README.md","hash":"c351bc76d3b4a138989c50f57bd3c52fa95eaa56","modified":1575291969570},{"_id":"themes/icarus/LICENSE","hash":"41f72cd544612bc4589c924c776422b800a4eff7","modified":1575291969570},{"_id":"source/_posts/2018-05-16-firstblog.md","hash":"92ef93aa2804ac1530012ae09138cba157192f8e","modified":1575469833035},{"_id":"source/_posts/2018-09-17-ValidParentheses.md","hash":"498a98a3e7563a5b738a6677497e210846fa126f","modified":1575469833283},{"_id":"source/_posts/2018-09-18-LongestSubstringWithoutRepeatingCharacters.md","hash":"b23e0883db0d68bad94b84eeabbb93528c1c8e17","modified":1575469833319},{"_id":"source/_posts/2018-05-18-create-vpn.md","hash":"8f0f892668805addff87b0d3e30e4e49261c1e0e","modified":1575469833351},{"_id":"source/_posts/2018-09-20-MedianofTwoSortedArrays.md","hash":"a71ef5ce5164a36063511fed251b5eca41ffcc2f","modified":1575469833103},{"_id":"source/_posts/2018-09-21-sougoumianshi.md","hash":"1d53787f832fd4b56b35bc333ea8e5168a11c291","modified":1575469833419},{"_id":"source/_posts/2018-09-22-ImplementQueueusinggStacks.md","hash":"23b5a52e4c8b2b0bf96b609ebbb14cba1b4b2158","modified":1575469833247},{"_id":"source/_posts/2019-01-16-ThinkInJava.md","hash":"e534d6cef7debb9ffa8360f66c6076b265d6f497","modified":1575469833067},{"_id":"source/_posts/2019-01-26-DesignPattern.md","hash":"a457379bc2717b157cc44b90559a22a610f3876b","modified":1575469833135},{"_id":"source/_posts/2019-11-26-iqiyi.md","hash":"112914ad309b5bb48fa96feafc979bc3696af2ca","modified":1575469832935},{"_id":"source/_posts/2019-01-16-leetcode.md","hash":"8c1305c7ac828bf59dc81907d189ccf4c48733f6","modified":1575469832995},{"_id":"source/_posts/2019年终总结.md","hash":"7091dfd3e41882b73f05f9b54743f86e87bc450b","modified":1576909773640},{"_id":"source/_posts/2018-11-14-springbootblog.md","hash":"74f0689926a828c84840fba9b4fa83195aa6a97b","modified":1575469833171},{"_id":"source/_posts/2018-09-22-toutiaomianshibuqu.md","hash":"7a02a9a244c83ad48e2b37c0df7a34496b5da6ed","modified":1575469939020},{"_id":"source/_posts/2019-11-27-CommandPattern.md","hash":"31c49def343d204540b15bddcf808bc599128a8b","modified":1575099433949},{"_id":"themes/icarus/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1575291969546},{"_id":"themes/icarus/.git/config","hash":"d29e0b80e29cd924161a73c63bac11af41d2631c","modified":1575291969546},{"_id":"source/_posts/双亲委派模型类加载器问题.md","hash":"0afbac3950e89cae09fddc0f2ac9e2dd3e4b8554","modified":1575285313328},{"_id":"themes/icarus/.git/index","hash":"06625cc757b0522eb190d5c8845c799cb74aa3e0","modified":1576417359805},{"_id":"themes/icarus/.git/packed-refs","hash":"3c4071a8b2efb256a95fc4ef49c957b6f8e955c4","modified":1575291969546},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE.md","hash":"6b17b84116938367757928087a09dcb8489d06f6","modified":1575291969570},{"_id":"themes/icarus/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1575291534040},{"_id":"source/_posts/java内存分配.md","hash":"72e2399f24aa23c3f427c546f08c56e33c868888","modified":1576417471205},{"_id":"source/_posts/gc.md","hash":"7a354cfcfbe61415bd4a022382927eafe376d972","modified":1576909825252},{"_id":"themes/icarus/languages/en.yml","hash":"66d873bbe04894610c2d28b0d03e10143997b51b","modified":1575291969570},{"_id":"themes/icarus/languages/es.yml","hash":"2e59e579d393c881dcbb885516d93eeaf469cec2","modified":1575291969570},{"_id":"themes/icarus/languages/fr.yml","hash":"0017f93a5d491a9c0e55911cdc35316762c5a94e","modified":1575291969570},{"_id":"themes/icarus/languages/id.yml","hash":"92d2d19a62a17b6e99f82a014309bbf6c13c9ae8","modified":1575291969570},{"_id":"themes/icarus/languages/ja.yml","hash":"6eed7771de2353d71b720c6e605cceb3f230b12e","modified":1575291969570},{"_id":"themes/icarus/languages/ko.yml","hash":"e7ac736b604429adedd67f3ca6043201eff7b23b","modified":1575291969570},{"_id":"themes/icarus/languages/pl.yml","hash":"43f5447c38c9be2e1f5ce6181a0f97eeb437b059","modified":1575291969570},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"bcf5bc81ca855d26bbc3b3bfabc7d84429e74b85","modified":1575291969570},{"_id":"themes/icarus/languages/ru.yml","hash":"ba8b4f7d77eb1d1e28aa1f9107bd0bbbdc4cba99","modified":1575291969570},{"_id":"themes/icarus/languages/tr.yml","hash":"eff1c0b3d5c4b328f6dd74a195ff378c898f4d29","modified":1575291969570},{"_id":"themes/icarus/languages/vn.yml","hash":"6d9f4fabca711a6cb0a0efd72aa75c3641beb4a6","modified":1575291969570},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"804f6a1edee49bb6a5ecb8e9d14d3e93eaca37c0","modified":1575291969570},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"6ff978a0c4c11e996925e1a912a1d805f4680a6c","modified":1575291969570},{"_id":"themes/icarus/layout/archive.ejs","hash":"2527527eaf3e757ab476325f691d2e2e0ff9c2d5","modified":1575291969570},{"_id":"themes/icarus/layout/categories.ejs","hash":"29d304f2b95a04fbc5e7529f9bdce9648e3545ef","modified":1575291969570},{"_id":"themes/icarus/layout/category.ejs","hash":"58aa84f75193b978b2072f29dbb84ed8279574b9","modified":1575291969570},{"_id":"themes/icarus/layout/layout.ejs","hash":"c9ab786c4c4a95e403fc8ea7e536084f21a9ecc4","modified":1575291969570},{"_id":"themes/icarus/layout/index.ejs","hash":"8ab440868f721bb7256ab9f2be96996850b0cf44","modified":1575291969570},{"_id":"themes/icarus/layout/page.ejs","hash":"ebf120d46074f67ea25a231d2f7a64fd1e751904","modified":1575291969570},{"_id":"themes/icarus/scripts/index.js","hash":"f97eb95812480cc3b07cc0ad44dc39f9a0032f24","modified":1575291969574},{"_id":"themes/icarus/layout/post.ejs","hash":"ebf120d46074f67ea25a231d2f7a64fd1e751904","modified":1575291969570},{"_id":"themes/icarus/layout/tag.ejs","hash":"45eb077f2ac86f5c8090cb1a2361eed56a368e95","modified":1575291969574},{"_id":"themes/icarus/layout/tags.ejs","hash":"0c527c6b72386f11c18e8aa5249be8c601e69906","modified":1575291969574},{"_id":"themes/icarus/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1575291534040},{"_id":"themes/icarus/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1575291534040},{"_id":"themes/icarus/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1575291534040},{"_id":"themes/icarus/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1575291534040},{"_id":"themes/icarus/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1575291534040},{"_id":"themes/icarus/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1575291534040},{"_id":"themes/icarus/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1575291534040},{"_id":"themes/icarus/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1575291534040},{"_id":"themes/icarus/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1575291534040},{"_id":"themes/icarus/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1575291534040},{"_id":"themes/icarus/.git/logs/HEAD","hash":"621958f34110b5f51808b89ebfc532f192c05e6d","modified":1575291969546},{"_id":"themes/icarus/includes/common/ConfigGenerator.js","hash":"451397efc7808787419fa3eb6b043c0bd8bbdf30","modified":1575291969570},{"_id":"themes/icarus/includes/common/ConfigValidator.js","hash":"48cff5402e93b11d5266370e9c4b78ee21369cb9","modified":1575291969570},{"_id":"themes/icarus/includes/common/utils.js","hash":"c0aeaeb57a42bcc71a92da2249762f91abd83ffe","modified":1575291969570},{"_id":"themes/icarus/includes/filters/highlight.js","hash":"19a4dcd2dee7388544b57e473cfb0fc9eea9623e","modified":1575291969570},{"_id":"themes/icarus/includes/generators/categories.js","hash":"7cb370ac53a05d6b1b9203579716c0ca83d35c36","modified":1575291969570},{"_id":"themes/icarus/includes/generators/category.js","hash":"313e170e55d74526c4e1be7181ef7a21439147c9","modified":1575291969570},{"_id":"themes/icarus/includes/generators/insight.js","hash":"c4b981443927b87cc14a3a583029e13f819d6d71","modified":1575291969570},{"_id":"themes/icarus/includes/generators/tags.js","hash":"8195322c208706427a1cf56361669dca4d86f6f1","modified":1575291969570},{"_id":"themes/icarus/includes/helpers/cdn.js","hash":"7d34ea6400cb3611c374c135304abcb65ef291b7","modified":1575291969570},{"_id":"themes/icarus/includes/helpers/config.js","hash":"173e02987e7a7d5df1e686f6ee4edd8cf494bdd3","modified":1575291969570},{"_id":"themes/icarus/includes/helpers/layout.js","hash":"afdf5e9704cfc087526b4a0403fe7eb04f22190e","modified":1575291969570},{"_id":"themes/icarus/includes/helpers/override.js","hash":"98f2c72c79de74bd01e3be10ef2f174c885d395a","modified":1575291969570},{"_id":"themes/icarus/includes/helpers/page.js","hash":"4ce98c781bcbc132672e6d16bf02df5bebcea7b3","modified":1575291969570},{"_id":"themes/icarus/includes/helpers/site.js","hash":"2f55818448fe83c73418dcf9751745c7918c10e3","modified":1575291969570},{"_id":"themes/icarus/includes/specs/article.spec.js","hash":"ce24279cd0cd39855216dab0cd5223c755757cdf","modified":1575291969570},{"_id":"themes/icarus/includes/specs/comment.spec.js","hash":"b0ef033e363b918134fb5a003143e9bd8fafa300","modified":1575291969570},{"_id":"themes/icarus/includes/specs/config.spec.js","hash":"7a9bac384a73cf9f39173fdb2dfc2813784d8891","modified":1575291969570},{"_id":"themes/icarus/includes/specs/donate.spec.js","hash":"722cb2662569957e8b1d1a467d9632b8cc6e69d6","modified":1575291969570},{"_id":"themes/icarus/includes/specs/footer.spec.js","hash":"8e6d7c5f9a13ce03241b6562259d210b389cb88e","modified":1575291969570},{"_id":"themes/icarus/includes/specs/icon_link.spec.js","hash":"f2a83ac5ccb74fc6f3dfbd25430e142297d8491c","modified":1575291969570},{"_id":"themes/icarus/includes/specs/meta.spec.js","hash":"ed1b818b929d71930608291514a72ef5a639efee","modified":1575291969570},{"_id":"themes/icarus/includes/specs/navbar.spec.js","hash":"7de29c0031738a4de4d31ed4f7b0c43447c7961c","modified":1575291969570},{"_id":"themes/icarus/includes/specs/plugins.spec.js","hash":"2fb7a28fdde9a46f576e69b9967f24d66adffb57","modified":1575291969570},{"_id":"themes/icarus/includes/specs/providers.spec.js","hash":"820cc6936ba75e3104cc2e8641716ed65ada8b6f","modified":1575291969570},{"_id":"themes/icarus/includes/specs/search.spec.js","hash":"1e3995cdc471e6a2817cd45e2b6f0fd39b4540ec","modified":1575291969570},{"_id":"themes/icarus/includes/specs/share.spec.js","hash":"5ec65409a17ead13974140fc5ddc19e526586d9f","modified":1575291969570},{"_id":"themes/icarus/includes/specs/sidebar.spec.js","hash":"630c9701affe2549abc61cd4d1e5153af2224fb6","modified":1575291969570},{"_id":"themes/icarus/includes/specs/widgets.spec.js","hash":"c5cedfe1074c0566baf8aca248f0392a501d9a74","modified":1575291969570},{"_id":"themes/icarus/includes/tasks/check_config.js","hash":"ce7626d643737c90dee6b75435ccdec26b89dacf","modified":1575291969570},{"_id":"themes/icarus/includes/tasks/check_deps.js","hash":"cfc357f27116d1b9285a3b0bec35c3e89ae73711","modified":1575291969570},{"_id":"themes/icarus/includes/tasks/welcome.js","hash":"00d1ef8c9609552b82e9a5140b838a9057c59508","modified":1575291969570},{"_id":"themes/icarus/layout/comment/changyan.ejs","hash":"73038ac4fdfdfa71d92edaa98cc194b3446586a3","modified":1575291969570},{"_id":"themes/icarus/layout/comment/changyan.locals.js","hash":"49bce2ee742c7224bda97092d6e0a1a09184ef34","modified":1575291969570},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"7a8c656c8651d48e21ed24c469ea75898b2b12df","modified":1575291969570},{"_id":"themes/icarus/layout/comment/disqus.locals.js","hash":"a8d2cecaa82ec9e2e2e61cb73417d63d115335d6","modified":1575291969570},{"_id":"themes/icarus/layout/comment/facebook.ejs","hash":"1c3751f36f737527e352c65bb1ca7172ff792979","modified":1575291969570},{"_id":"themes/icarus/layout/comment/facebook.locals.js","hash":"77e3ef1d933660d980b26d15968aa1a5c8a93a56","modified":1575291969570},{"_id":"themes/icarus/layout/comment/gitalk.ejs","hash":"eb1314badf793924b5786e92f8b3ebb0f21f3b58","modified":1575291969570},{"_id":"themes/icarus/layout/comment/gitalk.locals.js","hash":"f920f130598148b4d9f213c82f2d7f88a796012f","modified":1575291969570},{"_id":"themes/icarus/layout/comment/gitment.ejs","hash":"d5e1a396e23df4e75e139d12846290bdb08ba01e","modified":1575291969570},{"_id":"themes/icarus/layout/comment/gitment.locals.js","hash":"f920f130598148b4d9f213c82f2d7f88a796012f","modified":1575291969570},{"_id":"themes/icarus/layout/comment/isso.ejs","hash":"cc6a43bd24be764086f88ad7c5c97ff04df87e0b","modified":1575291969570},{"_id":"themes/icarus/layout/comment/isso.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/comment/livere.ejs","hash":"12ff9a345f6bba2f732f592e39508c2afde89b00","modified":1575291969570},{"_id":"themes/icarus/layout/comment/livere.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/comment/valine.ejs","hash":"a29cf2e69f66a37ddcec8343c60af1e676dcb77d","modified":1575291969570},{"_id":"themes/icarus/layout/comment/valine.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/common/article.ejs","hash":"d2362964b2d9427067e1d7dfe100220b380b2f70","modified":1575291969570},{"_id":"themes/icarus/layout/common/article.locals.js","hash":"1f108fa96e61a681d7b1ee390b4f0ff60d042720","modified":1575291969570},{"_id":"themes/icarus/layout/common/footer.locals.js","hash":"504ed92dc76723f19777463d690acfbe1d89e2ba","modified":1575291969570},{"_id":"themes/icarus/layout/common/head.ejs","hash":"0998072c9ece90e26339f2503633c4ca08da62e9","modified":1575291969570},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"4adfc361b780193bfc8ad73afb7079e550f37eb7","modified":1575291969570},{"_id":"themes/icarus/layout/common/navbar.locals.js","hash":"7e523ba80667038f2e58cf4f9cb073e9afbc70e6","modified":1575291969570},{"_id":"themes/icarus/layout/common/navbar.ejs","hash":"765d8ab516781d7157bb41d690a71b549e95e721","modified":1575291969570},{"_id":"themes/icarus/layout/common/paginator.ejs","hash":"7837d80b27f166161b3deeffb571680025c7d723","modified":1575291969570},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"52f54b4ba88253ad0ec13d3b40fa4232e691af57","modified":1575291969570},{"_id":"themes/icarus/layout/common/widget.ejs","hash":"02ffa7531d14b88e76bff5ff6d2b4482e7c5bbfd","modified":1575291969570},{"_id":"themes/icarus/layout/donate/alipay.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/donate/alipay.ejs","hash":"3290058879973e403a05472a0fe2ac0219d5b961","modified":1575291969570},{"_id":"themes/icarus/layout/donate/patreon.ejs","hash":"8e52a9c28ffaf4b0b786a20977b848c5f60f2274","modified":1575291969570},{"_id":"themes/icarus/layout/donate/patreon.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/donate/paypal.ejs","hash":"3975dee39f9378975b9c10f37d118ad7cb6f5bf6","modified":1575291969570},{"_id":"themes/icarus/layout/donate/wechat.ejs","hash":"051b873e1fc28c1d7c2d6443991b6a2f43813e6b","modified":1575291969570},{"_id":"themes/icarus/layout/donate/paypal.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/donate/wechat.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/animejs.ejs","hash":"c17ea2cfe5cb239342166e2ba72cbfc663c8160f","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/animejs.locals.js","hash":"3bf911060a222f00b03be708c37f20e36cb66ba9","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/back-to-top.ejs","hash":"5936b5fd2f2444605a21c6c422623f07f02d5c9a","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/back-to-top.locals.js","hash":"3bf911060a222f00b03be708c37f20e36cb66ba9","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"7dbbea5722277e00a624c1796ec83d5f9c12d059","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/baidu-analytics.locals.js","hash":"c02eb152e6aff05833006e6edd32b74c1c4258c3","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/busuanzi.ejs","hash":"4285b0ae608c7c54e4ecbebb6d22d4cd1be28f70","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/busuanzi.locals.js","hash":"ec80bcfa4c1302c04130a746df4b1298d117de0b","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/gallery.ejs","hash":"7d19b7a5713d08a614578f079f1327a651c472ae","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/gallery.locals.js","hash":"037fb56dffc128d3a91c1cb8852998d9539d3fac","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"13b298b0026bfc7bcb6a47b6c795fe15cc4584fc","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/google-analytics.locals.js","hash":"c02eb152e6aff05833006e6edd32b74c1c4258c3","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/hotjar.ejs","hash":"6df0d8f77ed39e4d32c78177844115e31bf3a776","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/hotjar.locals.js","hash":"9258fc2af057d2545a43fae54790743b63450378","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/mathjax.ejs","hash":"dddb6f37487286fe2080118bcbb4a8d82dc84d5e","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/mathjax.locals.js","hash":"7faa26fa6da6a93dc3f7fdcf5a784d1f8825b031","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/outdated-browser.ejs","hash":"1437d1ac085a8110e61317254f6c0a034121bc39","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/outdated-browser.locals.js","hash":"037fb56dffc128d3a91c1cb8852998d9539d3fac","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/progressbar.ejs","hash":"34423f74787cc9d67b2598dd69b07c84d5bf2280","modified":1575291969570},{"_id":"themes/icarus/layout/plugin/progressbar.locals.js","hash":"ec80bcfa4c1302c04130a746df4b1298d117de0b","modified":1575291969570},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"850aa91778100d693a52b10eaa8586c8e3215ee6","modified":1575291969570},{"_id":"themes/icarus/layout/search/baidu.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/search/google-cse.ejs","hash":"4b881a99325a6a0cebf97ac53e09d8fc67f87d29","modified":1575291969570},{"_id":"themes/icarus/layout/search/google-cse.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"9a27db2a007582ceee7ca4b1eebddbd456893568","modified":1575291969570},{"_id":"themes/icarus/layout/search/insight.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969570},{"_id":"themes/icarus/layout/share/addthis.ejs","hash":"f1c5f337333009d5f00dfbac4864a16ef8f9cb8d","modified":1575291969574},{"_id":"themes/icarus/layout/share/addthis.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969574},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"95d3bc1a841bd934b1ae9209ad1af74e743ecb10","modified":1575291969574},{"_id":"themes/icarus/layout/share/addtoany.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969574},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"f14c8084b7ee16a091f0bd2ae9039e3bfff7e7b7","modified":1575291969574},{"_id":"themes/icarus/layout/share/bdshare.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969574},{"_id":"themes/icarus/layout/share/sharejs.ejs","hash":"65d08316cc479910ea4f526cd1c299d0104daf7f","modified":1575291969574},{"_id":"themes/icarus/layout/share/sharejs.locals.js","hash":"11976fd4cfed1044be29b476b34c33175c9b4308","modified":1575291969574},{"_id":"themes/icarus/layout/share/sharethis.ejs","hash":"4f2c40f790f3be0a4e79db04f02ea41ba2f4d4c0","modified":1575291969574},{"_id":"themes/icarus/layout/share/sharethis.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969574},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"eb738a2ac2935ce7a542964d90088613b281dd15","modified":1575291969574},{"_id":"themes/icarus/layout/widget/archive.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969574},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"17e58e537645c4434a1140377ae3e7f43cca4927","modified":1575291969574},{"_id":"themes/icarus/layout/widget/category.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969574},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"c18dab874af84147349a596d9e713f8e0ee5e17e","modified":1575291969574},{"_id":"themes/icarus/layout/widget/links.locals.js","hash":"872cf1a18e152361f5739c6d5fecc0bf46d59513","modified":1575291969574},{"_id":"themes/icarus/layout/widget/profile.ejs","hash":"14f024e8da3cbaaa55f9ae9706de664c3f9b7dd8","modified":1575291969574},{"_id":"themes/icarus/layout/widget/profile.locals.js","hash":"9a43112ac0a58df98bb418563ec04558023e1fae","modified":1575291969574},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"14a2f4587831e017b93818c06dbe18a7e8a27c1e","modified":1575291969574},{"_id":"themes/icarus/layout/widget/recent_posts.locals.js","hash":"5065aca74ec2c98ec88994636fee8408f769c5f2","modified":1575291969574},{"_id":"themes/icarus/layout/widget/subscribe_email.ejs","hash":"391622e9c1d17bf79180faa617ed8c1ee1871a87","modified":1575291969574},{"_id":"themes/icarus/layout/widget/subscribe_email.locals.js","hash":"aae87fbdb7a1245a0fc0637225a935fc39836916","modified":1575291969574},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"e41aff420cc4ea1c454de49bd8af0e7a93f3db3f","modified":1575291969574},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"26fa17afaf0cb345a213816c44c39575a66759ba","modified":1575291969574},{"_id":"themes/icarus/layout/widget/tagcloud.locals.js","hash":"093f59d2f43e7ffa47bee79da15f98705300dfba","modified":1575291969574},{"_id":"themes/icarus/layout/widget/toc.ejs","hash":"e800b4b38eab716882389a09527e9f59a189dea6","modified":1575291969574},{"_id":"themes/icarus/layout/widget/toc.locals.js","hash":"e730a7fff2717f17741540e5ed77b89e289fdeab","modified":1575291969574},{"_id":"themes/icarus/source/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1575291969574},{"_id":"themes/icarus/source/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1575291969574},{"_id":"themes/icarus/source/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1575291969574},{"_id":"themes/icarus/source/css/search.css","hash":"d6a59894819e7431d42b249b6c2fc9ff3b99a488","modified":1575291969574},{"_id":"themes/icarus/source/css/style.styl","hash":"1c4fa31437c7e499f4bcf0b4fa7da9c2d16eeea7","modified":1575291969574},{"_id":"themes/icarus/source/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1575291969574},{"_id":"themes/icarus/source/images/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1575291969574},{"_id":"themes/icarus/source/images/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1575291969574},{"_id":"themes/icarus/source/images/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1575291969574},{"_id":"themes/icarus/source/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1575291969574},{"_id":"themes/icarus/source/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1575291969574},{"_id":"themes/icarus/source/js/back-to-top.js","hash":"b1dcf30577cefe833dc6151757c0a05ea5b5a643","modified":1575291969574},{"_id":"themes/icarus/source/js/gallery.js","hash":"bb74e694457dc23b83ac80cf5aadcd26b60469fd","modified":1575291969574},{"_id":"themes/icarus/source/js/insight.js","hash":"8ba56fd5e4232a05ccef5f8b733c7ecca0814633","modified":1575291969574},{"_id":"themes/icarus/source/js/main.js","hash":"faee41896e7bb3373ba5032b82d0b21a0321cea5","modified":1575291969574},{"_id":"themes/icarus/source/images/head.jpeg","hash":"cde129a4ffe9fcee8b1c161c7ee68cc811fd2dc3","modified":1568187606000},{"_id":"themes/icarus/.git/refs/heads/master","hash":"4fd3c8c3e2abce5ec41454edfe4fe95c4074ff9b","modified":1575291969546},{"_id":"themes/icarus/.git/objects/pack/pack-6fe94ac95223ad796d51f37f6033f5b4b7243782.idx","hash":"b1dc80095f1f7135ef92d597ce129dd58b7099f9","modified":1575291969466},{"_id":"themes/icarus/.git/logs/refs/heads/master","hash":"621958f34110b5f51808b89ebfc532f192c05e6d","modified":1575291969546},{"_id":"themes/icarus/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1575291969546},{"_id":"themes/icarus/.git/logs/refs/remotes/origin/HEAD","hash":"621958f34110b5f51808b89ebfc532f192c05e6d","modified":1575291969546},{"_id":"themes/icarus/.git/objects/pack/pack-6fe94ac95223ad796d51f37f6033f5b4b7243782.pack","hash":"685c7a4b6bc0054550ecd1dcbab3a5a86073c2af","modified":1575291969462},{"_id":"public/search.xml","hash":"9ac964883d2e5ac26e9a523973a7e2401b2f3fb0","modified":1576909831056},{"_id":"public/content.json","hash":"a2a8d2fd4a5860f996e94ad035a170e610b3383b","modified":1576909831056},{"_id":"public/2019/12/05/gc/index.html","hash":"54c41571057200a53af807db7de37367a8ab39c3","modified":1576909831056},{"_id":"public/2019/12/04/java内存分配/index.html","hash":"59aa8e6903f59bf45e865d101d1a85726d673e05","modified":1576909831056},{"_id":"public/2019/12/02/双亲委派模型类加载器问题/index.html","hash":"9493371e731067f6c833f7a0997d0da86d910323","modified":1576909831056},{"_id":"public/2019/11/27/2019-11-27-CommandPattern/index.html","hash":"7e92c700ae37315e66cc69310af179c5ab7aaa78","modified":1576909831056},{"_id":"public/2019/11/26/2019-11-26-iqiyi/index.html","hash":"ed4a0ee9e28f70d31adcf3d2196f4cfae03c44c4","modified":1576909831056},{"_id":"public/2019/01/26/2019-01-26-DesignPattern/index.html","hash":"b2921762498e8401c66e53538b9a96db2029889b","modified":1576909831056},{"_id":"public/2019/01/16/2019-01-16-ThinkInJava/index.html","hash":"f4a1ad1b1b0a308e510fe0a01b59a7c9905faa6d","modified":1576909831056},{"_id":"public/2019/01/16/2019-01-16-leetcode/index.html","hash":"8ee340964f06a03df0a0b1f51e898452652b1967","modified":1576909831056},{"_id":"public/2018/11/14/2018-11-14-springbootblog/index.html","hash":"85c3873ab71f80de94000818459e49ebd5312f9a","modified":1576909831056},{"_id":"public/2018/09/22/2018-09-22-ImplementQueueusinggStacks/index.html","hash":"c336595513e977abd0da54a3624f8f73476ad058","modified":1576909831056},{"_id":"public/2018/09/22/2018-09-22-toutiaomianshibuqu/index.html","hash":"9ac8185398abea80a3ff2ffb5f6d1500b1d28729","modified":1576909831056},{"_id":"public/2018/09/21/2018-09-21-sougoumianshi/index.html","hash":"8cad65e04c91dec70e6ff0b59f22da24ea89a01c","modified":1576909831056},{"_id":"public/2018/09/20/2018-09-20-MedianofTwoSortedArrays/index.html","hash":"55a03d4be0ff4500dbb645b2c4d017be7e8cb5b6","modified":1576909831056},{"_id":"public/2018/09/18/2018-09-18-LongestSubstringWithoutRepeatingCharacters/index.html","hash":"947afba2ba70ee764ca85c37c21923892f524339","modified":1576909831056},{"_id":"public/2018/09/17/2018-09-17-ValidParentheses/index.html","hash":"4b9f0fe1afb14ff50bcbfc2f75262e9ec66c6254","modified":1576909831056},{"_id":"public/2018/05/18/2018-05-18-create-vpn/index.html","hash":"4d936ac3314d2be7b7c38c2778d90a73dfc03042","modified":1576909831056},{"_id":"public/2018/05/16/2018-05-16-firstblog/index.html","hash":"12c4e579e2382a4d9bedae04e3c2ba42ee7c253d","modified":1576909831056},{"_id":"public/index.html","hash":"261fac076270f96425dda7692bdb07ce35d7b149","modified":1576909831056},{"_id":"public/page/2/index.html","hash":"2f79b755e12d82b47c2221a9c639594dbd32c8ab","modified":1576909831056},{"_id":"public/archives/index.html","hash":"a5478c11da7767abb42baffb6140ae41d14b9057","modified":1576909831056},{"_id":"public/archives/page/2/index.html","hash":"e2806401672d84d68ca30f3bf97e7fb5a17732d8","modified":1576909831056},{"_id":"public/archives/2018/index.html","hash":"8f79067fa5ee66da51e13f0dd836f166a060bcf6","modified":1576909831056},{"_id":"public/archives/2018/05/index.html","hash":"97730a76b1f09fb50a440d8ab56396afabafe6bf","modified":1576909831056},{"_id":"public/archives/2018/09/index.html","hash":"5bd057d1da120467a7fbb112cea8124008e37aa5","modified":1576909831056},{"_id":"public/archives/2018/11/index.html","hash":"fb23c6fc56a00e7d43c90665578fdfece2a4d999","modified":1576909831056},{"_id":"public/archives/2019/index.html","hash":"2651ec877bc47cebd02d4acdd723ac41e7b1c7b3","modified":1576909831056},{"_id":"public/archives/2019/01/index.html","hash":"bf73121b69cef931bd211d05d175be3a3bc051e3","modified":1576909831056},{"_id":"public/archives/2019/11/index.html","hash":"ebd4b5424740292ff5af173e536068d5efd14f9b","modified":1576909831056},{"_id":"public/archives/2019/12/index.html","hash":"8b95c0b243555ff754930e5b3465f2246252c0f0","modified":1576909831056},{"_id":"public/categories/learning/index.html","hash":"20eac1c347d9f801e3dabab4688a986115f2effe","modified":1576909831056},{"_id":"public/categories/leetcode/index.html","hash":"9cc71a3020c337f39cba51fa99273eb03222818f","modified":1576909831056},{"_id":"public/categories/note/index.html","hash":"6964b66638a7c710b3949f251a02e37663f45ccc","modified":1576909831056},{"_id":"public/categories/读书/index.html","hash":"f0491a5a89876e7333543ede5125746f7f93a3fe","modified":1576909831056},{"_id":"public/categories/设计模式/index.html","hash":"825bec6b546aff77b6d7b6ff5115649294cce14b","modified":1576909831056},{"_id":"public/categories/java/index.html","hash":"4c43e351521dd0d569a0e4002174043449a78a04","modified":1576909831056},{"_id":"public/tags/learning/index.html","hash":"ea05ce383dcc30bc37aa3fb3733a06ea6790f2bc","modified":1576909831056},{"_id":"public/tags/learning-set/index.html","hash":"eb05edbe6afecb516669c41a4a6abaeb9dc6e4e6","modified":1576909831056},{"_id":"public/tags/learning-Array/index.html","hash":"377ca4c127d63193bae97f69bd43cbd1f3401073","modified":1576909831056},{"_id":"public/tags/interview/index.html","hash":"cbc1c5b9ed3dd92dd32104912f4d6e50f1e9da5e","modified":1576909831056},{"_id":"public/tags/stack/index.html","hash":"c5ef76f01e8d45d9f1f403ccc132734120723992","modified":1576909831056},{"_id":"public/tags/springboot/index.html","hash":"b20a3931148162bced96203b8726942084f5c94a","modified":1576909831056},{"_id":"public/tags/java/index.html","hash":"8d1a78294fbb36ad9d6e6b5c82f3c60d45f80834","modified":1576908356201},{"_id":"public/categories/index.html","hash":"57216336ade3ec77e17ca5ee782aac20266bc9b9","modified":1576909831056},{"_id":"public/tags/index.html","hash":"4f5c9434abf80d2a44c0e85d193a24eb204bdc0e","modified":1576909831056},{"_id":"public/2019/12/21/2019年终总结/index.html","hash":"87a6faf9fdfe58e10b53926b3a7c8b8d7a07d3ba","modified":1576909831056},{"_id":"public/tags/程序人生/index.html","hash":"e3320951508c6f6783e1e9287ed06a57ab9a1790","modified":1576908356201},{"_id":"public/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1576908356201},{"_id":"public/images/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1576908356201},{"_id":"public/images/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1576908356201},{"_id":"public/images/thumbnail.svg","hash":"b9c58ff09ed415e6cf08b42b35faa2bc000d5059","modified":1576908356201},{"_id":"public/images/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1576908356201},{"_id":"public/node_modules/assets/exp/f02.exp.json","hash":"241b6afafa2e25c6d7a54692a8b5aa060a137ab1","modified":1576908356201},{"_id":"public/node_modules/assets/exp/f03.exp.json","hash":"fbf7729e504f14f83f976827fcf62301a6579a34","modified":1576908356201},{"_id":"public/node_modules/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1576908356201},{"_id":"public/node_modules/assets/exp/f04.exp.json","hash":"35e746ede62e7090e7dfb08561d77772f58b4153","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/flickHead_00.mtn","hash":"f64c79c9171660db5c440bef229ac2e35a1597d5","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/flickHead_01.mtn","hash":"a1011d6bf397bcd3c3c968d9616f88fe1ffbc83c","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/flickHead_02.mtn","hash":"d3c9c0acb4dc25a2274f3b9faa71e5ce60ad92e4","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/idle_00.mtn","hash":"378b4577217c604c9d28ab4edf8b707c8d8c2fbb","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/idle_01.mtn","hash":"88c2494655dbb712b842f03232b619f381753d52","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/pinchIn_01.mtn","hash":"a5fefb45115695db72b9499e627a51b2b9394f2c","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/pinchIn_02.mtn","hash":"aa0d66ca9b06c374577fd7e64e89756de1e1f2ae","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/pinchOut_00.mtn","hash":"e07fe8fd8c2810e3c1d28b730bd49c8c25849bad","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/idle_02.mtn","hash":"7f5d2cf8706007c8659938eba132a68c470a4c26","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/pinchIn_00.mtn","hash":"70978b4c983f6a9fd6d3d9c24571586f7d6eac30","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/pinchOut_01.mtn","hash":"e05df948d08b17f34c993a9c1f901190509d5db0","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/pinchOut_02.mtn","hash":"b323fd350d334b33bbdfb31194ae664089986c27","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/shake_00.mtn","hash":"5185d02c7ab9f0bec3d4a890b54b2378e553373d","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/shake_01.mtn","hash":"e812985a56796e122018f9d57d1606a4866ff7d1","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/shake_02.mtn","hash":"2702970805e07777974c383613e631730982bcff","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/tapBody_00.mtn","hash":"835aa3d4a8fbd26c0bb66b164a19464fa3f17a99","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/tapBody_01.mtn","hash":"78fca17436ab5e065e27f419f135aa6c0a0b52ef","modified":1576908356201},{"_id":"public/node_modules/assets/mtn/tapBody_02.mtn","hash":"a75acb51c1191ce5050d3ee1af6f2dcc787c7c5e","modified":1576908356201},{"_id":"public/node_modules/assets/shizuku.model.json","hash":"19a05bd41b806a935cea42c2000626fc82da2536","modified":1576908356201},{"_id":"public/node_modules/assets/shizuku.physics.json","hash":"6484d646e79a44c83784c6ae434cf7349746c5c8","modified":1576908356201},{"_id":"public/node_modules/assets/shizuku.pose.json","hash":"ac5505efbf80ba0a2e5783d67fe232bc5c6f1f80","modified":1576908356201},{"_id":"public/node_modules/assets/snd/flickHead_00.mp3","hash":"356388d939006b03cf9e6158c603b58d4800bec1","modified":1576908356201},{"_id":"public/node_modules/assets/snd/flickHead_01.mp3","hash":"436d0bbccf6e7a2744447554947eee4563608970","modified":1576908356201},{"_id":"public/node_modules/assets/snd/flickHead_02.mp3","hash":"5f63477ce63f2073e24d68fea906fe136fe6349e","modified":1576908356201},{"_id":"public/node_modules/assets/snd/pinchIn_00.mp3","hash":"f9baa3b7cadec20b714135fc49cfab3ff6adeeb4","modified":1576908356201},{"_id":"public/node_modules/assets/snd/pinchIn_01.mp3","hash":"d5c8cc6f61b56222a83a5174f75006f83c3b88da","modified":1576908356201},{"_id":"public/node_modules/assets/snd/shake_00.mp3","hash":"f65dd58e7b44ec5c865d13c190316070b625b5fe","modified":1576908356201},{"_id":"public/node_modules/assets/snd/shake_01.mp3","hash":"c1e0e8a07ff268ee06c2b7825d1b645e193f21b9","modified":1576908356201},{"_id":"public/node_modules/assets/snd/shake_02.mp3","hash":"8882b94bce00f09232588b7301badb105fa8acab","modified":1576908356201},{"_id":"public/node_modules/assets/snd/tapBody_00.mp3","hash":"003e68a59a9c8392e230f34c91860efbd946277a","modified":1576908356201},{"_id":"public/node_modules/assets/snd/tapBody_01.mp3","hash":"5314b50f153df71559e51e2586581c006df00722","modified":1576908356201},{"_id":"public/node_modules/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1576908356201},{"_id":"public/node_modules/assets/snd/tapBody_02.mp3","hash":"15e7815ed0a0e5164e18e0c53b97aedc742a134d","modified":1576908356201},{"_id":"public/images/head.jpeg","hash":"cde129a4ffe9fcee8b1c161c7ee68cc811fd2dc3","modified":1576908356201},{"_id":"public/node_modules/assets/moc/shizuku.1024/texture_00.png","hash":"21bdb28b31783e23b26b3aa061e90be4088665aa","modified":1576908356201},{"_id":"public/node_modules/assets/moc/shizuku.1024/texture_03.png","hash":"07f568a2bb8045b6bdff7783fb4daf62c821f9ab","modified":1576908356201},{"_id":"public/node_modules/assets/moc/shizuku.1024/texture_05.png","hash":"0cd00007fb8bff62a2eb08e1d7c43abab8722224","modified":1576908356201},{"_id":"public/node_modules/assets/snd/pinchIn_02.mp3","hash":"5b63e02607571ac601c500995e836e6c861b1c62","modified":1576908356201},{"_id":"public/node_modules/assets/snd/pinchOut_00.mp3","hash":"0654f38f6e9fd623eaf8be11b5d58c9d12991949","modified":1576908356201},{"_id":"public/node_modules/assets/snd/pinchOut_01.mp3","hash":"8a081030fd53c07bffe3edd48f87a371ca77296b","modified":1576908356201},{"_id":"public/node_modules/assets/snd/pinchOut_02.mp3","hash":"554edb2f3838cbdc27d1a9c6b8a9cb6eb465cbdd","modified":1576908356201},{"_id":"public/css/insight.css","hash":"22943a610d5cfffedfb823c692f4db2b1f37a4c9","modified":1576908356201},{"_id":"public/css/progressbar.css","hash":"bbc737b7a8feb19901e792c447a846273779d5c3","modified":1576908356201},{"_id":"public/css/search.css","hash":"d6a59894819e7431d42b249b6c2fc9ff3b99a488","modified":1576908356201},{"_id":"public/css/style.css","hash":"ce4b8320c2280b82e0d0c255cfbbe31fd8a0c264","modified":1576908356201},{"_id":"public/css/back-to-top.css","hash":"5805bee2445e997d64dfe526b08b5fe0bce357eb","modified":1576908356201},{"_id":"public/js/animation.js","hash":"d744581909d2d092a584be07c39f9d3f0d009ec7","modified":1576908356201},{"_id":"public/js/back-to-top.js","hash":"b1dcf30577cefe833dc6151757c0a05ea5b5a643","modified":1576908356201},{"_id":"public/js/gallery.js","hash":"bb74e694457dc23b83ac80cf5aadcd26b60469fd","modified":1576908356201},{"_id":"public/js/insight.js","hash":"8ba56fd5e4232a05ccef5f8b733c7ecca0814633","modified":1576908356201},{"_id":"public/js/main.js","hash":"faee41896e7bb3373ba5032b82d0b21a0321cea5","modified":1576908356201},{"_id":"public/node_modules/assets/moc/shizuku.1024/texture_01.png","hash":"3d0e745f3e560071ee08beeecde186e5ea35d99e","modified":1576908356201},{"_id":"public/node_modules/assets/moc/shizuku.1024/texture_04.png","hash":"f764d594841905db8b2998dd61c329866125ad97","modified":1576908356201},{"_id":"public/node_modules/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1576908356201},{"_id":"public/node_modules/assets/moc/shizuku.1024/texture_02.png","hash":"055eb2da9c13e9116be93a1e60c0ea2b660af864","modified":1576908356201},{"_id":"public/node_modules/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1576908356201},{"_id":"public/node_modules/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1576908356201},{"_id":"public/node_modules/assets/moc/shizuku.moc","hash":"c2670a0f75830edc89d7fe6d074de4ee67e8dc5d","modified":1576908356201},{"_id":"source/about/index.md","hash":"5a0c43960eb62b44fc1775260eb235e2f9bd3c7f","modified":1576909040209},{"_id":"public/about/index.html","hash":"e0fc8a09ec4e683153ca51738ec7538bd5f64d6c","modified":1576909831056},{"_id":"public/categories/程序人生/index.html","hash":"99892a429e6e355b598c2aa5f5090325b7916a16","modified":1576909831056}],"Category":[{"name":"learning","_id":"ck4f6itp0000273et2kil092b"},{"name":"leetcode","_id":"ck4f6itp9000773etbi9c73bu"},{"name":"note","_id":"ck4f6itpv000s73et6e138crh"},{"name":"读书","_id":"ck4f6itq1001073et14c3h26j"},{"name":"设计模式","_id":"ck4f6itqb001k73et3cb60hok"},{"name":"java","_id":"ck4f6itqd001p73et6npw9io2"},{"name":"程序人生","_id":"ck4f7d4lq00006wetemqy9otq"}],"Data":[],"Page":[{"title":"刘云尚","layout":"page","_content":"\n## 联系方式\n\n- Email：970090853@qq.com\n\n## 个人信息\n\n- **刘云尚**/男/1996\n- Github：https://github.com/csxiaoshang\n- 目前在北京，北京邮电大学\n","source":"about/index.md","raw":"title: \"刘云尚\"\nlayout: \"page\"\n---\n\n## 联系方式\n\n- Email：970090853@qq.com\n\n## 个人信息\n\n- **刘云尚**/男/1996\n- Github：https://github.com/csxiaoshang\n- 目前在北京，北京邮电大学\n","date":"2019-12-21T06:17:20.269Z","updated":"2019-12-21T06:17:20.209Z","path":"about/index.html","comments":1,"_id":"ck4f6xl9l0000oketc3ct9a2t","content":"<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li>Email：<a href=\"mailto:970090853@qq.com\" target=\"_blank\" rel=\"noopener\">970090853@qq.com</a></li>\n</ul>\n<h2 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h2><ul>\n<li><strong>刘云尚</strong>/男/1996</li>\n<li>Github：<a href=\"https://github.com/csxiaoshang\" target=\"_blank\" rel=\"noopener\">https://github.com/csxiaoshang</a></li>\n<li>目前在北京，北京邮电大学</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h2><ul>\n<li>Email：<a href=\"mailto:970090853@qq.com\" target=\"_blank\" rel=\"noopener\">970090853@qq.com</a></li>\n</ul>\n<h2 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h2><ul>\n<li><strong>刘云尚</strong>/男/1996</li>\n<li>Github：<a href=\"https://github.com/csxiaoshang\" target=\"_blank\" rel=\"noopener\">https://github.com/csxiaoshang</a></li>\n<li>目前在北京，北京邮电大学</li>\n</ul>\n"}],"Post":[{"layout":"post","title":"my first blog","date":"2018-05-16T07:52:30.000Z","_content":"\n\n> 上网学习了一上午怎么用github搭建个人博客，找到了xudailong先生的博客，fork项目，拿来做了一下更改，算是初步完成了，表示感谢！\n","source":"_posts/2018-05-16-firstblog.md","raw":"---\nlayout: post\ntitle:  \"my first blog\"\ndate:   2018-05-16 15:52:30\ncategories: learning\ntags: learning\n---\n\n\n> 上网学习了一上午怎么用github搭建个人博客，找到了xudailong先生的博客，fork项目，拿来做了一下更改，算是初步完成了，表示感谢！\n","slug":"2018-05-16-firstblog","published":1,"updated":"2019-12-04T14:30:33.035Z","comments":1,"photos":[],"link":"","_id":"ck4f6ito7000073etf4ea6iqk","content":"<blockquote>\n<p>上网学习了一上午怎么用github搭建个人博客，找到了xudailong先生的博客，fork项目，拿来做了一下更改，算是初步完成了，表示感谢！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>上网学习了一上午怎么用github搭建个人博客，找到了xudailong先生的博客，fork项目，拿来做了一下更改，算是初步完成了，表示感谢！</p>\n</blockquote>\n"},{"layout":"post","title":"20.Valid Parentheses","date":"2018-09-17T15:02:20.000Z","_content":"\n> 这是一道比较简单的堆栈题目，但是本人很少用java写程序做题，做题的过程中出了很多错误，也上网百度了下，算是完成了\n\n<!--more-->\n\n```java\nclass Solution {\n\tpublic boolean isValid(String s) {\n\t\tStack<Character> stack=new Stack<Character>();\n\t\tfor(int i=0;i<s.length();i++){\n\t\t\tchar ch=s.charAt(i);\n\t\t\tswitch (ch) {\n\t\t\tcase '(':\n\t\t\tcase '[':\n\t\t\tcase '{':\n\t\t\t\tstack.push(ch);\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\tif((stack.isEmpty())||stack.peek()!='(')\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\tstack.pop();\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tif((stack.isEmpty())||stack.peek()!='[')\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\tstack.pop();\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tif((stack.isEmpty())||stack.peek()!='}')\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\tstack.pop();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!stack.isEmpty())\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\t}\n```","source":"_posts/2018-09-17-ValidParentheses.md","raw":"---\nlayout: post\ntitle:  \"20.Valid Parentheses\"\ndate:   2018-09-17 23:02:20\ncategories: leetcode\ntags: learning\n---\n\n> 这是一道比较简单的堆栈题目，但是本人很少用java写程序做题，做题的过程中出了很多错误，也上网百度了下，算是完成了\n\n<!--more-->\n\n```java\nclass Solution {\n\tpublic boolean isValid(String s) {\n\t\tStack<Character> stack=new Stack<Character>();\n\t\tfor(int i=0;i<s.length();i++){\n\t\t\tchar ch=s.charAt(i);\n\t\t\tswitch (ch) {\n\t\t\tcase '(':\n\t\t\tcase '[':\n\t\t\tcase '{':\n\t\t\t\tstack.push(ch);\n\t\t\t\tbreak;\n\t\t\tcase ')':\n\t\t\t\tif((stack.isEmpty())||stack.peek()!='(')\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\tstack.pop();\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tif((stack.isEmpty())||stack.peek()!='[')\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\tstack.pop();\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tif((stack.isEmpty())||stack.peek()!='}')\n\t\t\t\t\treturn false;\n\t\t\t\telse\n\t\t\t\t\tstack.pop();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!stack.isEmpty())\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\t}\n```","slug":"2018-09-17-ValidParentheses","published":1,"updated":"2019-12-04T14:30:33.283Z","comments":1,"photos":[],"link":"","_id":"ck4f6itot000173et87pvfwim","content":"<blockquote>\n<p>这是一道比较简单的堆栈题目，但是本人很少用java写程序做题，做题的过程中出了很多错误，也上网百度了下，算是完成了</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<figure class=\"highlight java hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">boolean</span> <span class=\"hljs-title\">isValid</span><span class=\"hljs-params\">(String s)</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\tStack&lt;Character&gt; stack=<span class=\"hljs-keyword\">new</span> Stack&lt;Character&gt;();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>;i&lt;s.length();i++)&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">char</span> ch=s.charAt(i);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">switch</span> (ch) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'('</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'['</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'&#123;'</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\tstack.push(ch);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">')'</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">if</span>((stack.isEmpty())||stack.peek()!=<span class=\"hljs-string\">'('</span>)</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">else</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">16</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\tstack.pop();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">17</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">18</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">']'</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">19</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">if</span>((stack.isEmpty())||stack.peek()!=<span class=\"hljs-string\">'['</span>)</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">20</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">21</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">else</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">22</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\tstack.pop();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">23</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">24</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">'&#125;'</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">25</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">if</span>((stack.isEmpty())||stack.peek()!=<span class=\"hljs-string\">'&#125;'</span>)</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">26</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">27</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">else</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">28</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\tstack.pop();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">29</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">30</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">default</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">31</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">32</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">33</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">34</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">if</span>(!stack.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">35</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">36</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">true</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">37</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">38</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<blockquote>\n<p>这是一道比较简单的堆栈题目，但是本人很少用java写程序做题，做题的过程中出了很多错误，也上网百度了下，算是完成了</p>\n</blockquote>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isValid</span><span class=\"params\">(String s)</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\tStack&lt;Character&gt; stack=<span class=\"keyword\">new</span> Stack&lt;Character&gt;();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;s.length();i++)&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">char</span> ch=s.charAt(i);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">switch</span> (ch) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'('</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'['</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'&#123;'</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\tstack.push(ch);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">')'</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((stack.isEmpty())||stack.peek()!=<span class=\"string\">'('</span>)</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">16</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\tstack.pop();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">17</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">18</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">']'</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">19</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((stack.isEmpty())||stack.peek()!=<span class=\"string\">'['</span>)</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">20</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">21</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">22</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\tstack.pop();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">23</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">24</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">case</span> <span class=\"string\">'&#125;'</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">25</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((stack.isEmpty())||stack.peek()!=<span class=\"string\">'&#125;'</span>)</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">26</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">27</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">28</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t\tstack.pop();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">29</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">30</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">default</span>:</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">31</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">32</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">33</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">34</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!stack.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">35</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">36</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">37</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">38</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr></table></figure>"},{"layout":"post","title":"3.Longest Substring Without Repeating Characters","date":"2018-09-18T05:12:20.000Z","_content":"\n\n\n## Question: Given a string, find the length of the longest substring without repeating characters.\n\n这道题两个循环遍历找最大的子串也可以，但是那样会慢一些，这里借助set的性质处理的这道题，感觉还可以用KMP算法，等回头做了再贴上来\n\n<!--more-->\n\n```java\n\tclass Solution {\n    public int lengthOfLongestSubstring(String s) {\n        \tint len=s.length();\n\t\tint ans=0;\n\t\tSet<Character> se=new HashSet<Character>();\n\t\tfor(int i=0,j=0;j<len;) {\n\t\t\tif(!se.contains(s.charAt(j))) {\n\t\t\t\tse.add(s.charAt(j));\n\t\t\t\tj++;\n\t\t\t\tans=Math.max(ans, j-i);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tse.remove(s.charAt(i));\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n    }\n\t}\n```","source":"_posts/2018-09-18-LongestSubstringWithoutRepeatingCharacters.md","raw":"---\nlayout: post\ntitle:  \"3.Longest Substring Without Repeating Characters\"\ndate:   2018-09-18 13:12:20\ncategories: leetcode\ntags: learning set\n---\n\n\n\n## Question: Given a string, find the length of the longest substring without repeating characters.\n\n这道题两个循环遍历找最大的子串也可以，但是那样会慢一些，这里借助set的性质处理的这道题，感觉还可以用KMP算法，等回头做了再贴上来\n\n<!--more-->\n\n```java\n\tclass Solution {\n    public int lengthOfLongestSubstring(String s) {\n        \tint len=s.length();\n\t\tint ans=0;\n\t\tSet<Character> se=new HashSet<Character>();\n\t\tfor(int i=0,j=0;j<len;) {\n\t\t\tif(!se.contains(s.charAt(j))) {\n\t\t\t\tse.add(s.charAt(j));\n\t\t\t\tj++;\n\t\t\t\tans=Math.max(ans, j-i);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tse.remove(s.charAt(i));\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n    }\n\t}\n```","slug":"2018-09-18-LongestSubstringWithoutRepeatingCharacters","published":1,"updated":"2019-12-04T14:30:33.319Z","comments":1,"photos":[],"link":"","_id":"ck4f6itp3000473et6p9g72t6","content":"<h2 id=\"Question-Given-a-string-find-the-length-of-the-longest-substring-without-repeating-characters\"><a href=\"#Question-Given-a-string-find-the-length-of-the-longest-substring-without-repeating-characters\" class=\"headerlink\" title=\"Question: Given a string, find the length of the longest substring without repeating characters.\"></a>Question: Given a string, find the length of the longest substring without repeating characters.</h2><p>这道题两个循环遍历找最大的子串也可以，但是那样会慢一些，这里借助set的性质处理的这道题，感觉还可以用KMP算法，等回头做了再贴上来</p>\n<a id=\"more\"></a>\n\n<figure class=\"highlight java hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">lengthOfLongestSubstring</span><span class=\"hljs-params\">(String s)</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">       \t<span class=\"hljs-keyword\">int</span> len=s.length();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"hljs-keyword\">int</span> ans=<span class=\"hljs-number\">0</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">\tSet&lt;Character&gt; se=<span class=\"hljs-keyword\">new</span> HashSet&lt;Character&gt;();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i=<span class=\"hljs-number\">0</span>,j=<span class=\"hljs-number\">0</span>;j&lt;len;) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">if</span>(!se.contains(s.charAt(j))) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tse.add(s.charAt(j));</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tj++;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tans=Math.max(ans, j-i);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">else</span> &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tse.remove(s.charAt(i));</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\ti++;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">16</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">17</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"hljs-keyword\">return</span> ans;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">18</span></pre></td><td class=\"code\"><pre><span class=\"line\">   &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">19</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"Question-Given-a-string-find-the-length-of-the-longest-substring-without-repeating-characters\"><a href=\"#Question-Given-a-string-find-the-length-of-the-longest-substring-without-repeating-characters\" class=\"headerlink\" title=\"Question: Given a string, find the length of the longest substring without repeating characters.\"></a>Question: Given a string, find the length of the longest substring without repeating characters.</h2><p>这道题两个循环遍历找最大的子串也可以，但是那样会慢一些，这里借助set的性质处理的这道题，感觉还可以用KMP算法，等回头做了再贴上来</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">lengthOfLongestSubstring</span><span class=\"params\">(String s)</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">       \t<span class=\"keyword\">int</span> len=s.length();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">\tSet&lt;Character&gt; se=<span class=\"keyword\">new</span> HashSet&lt;Character&gt;();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=<span class=\"number\">0</span>;j&lt;len;) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!se.contains(s.charAt(j))) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tse.add(s.charAt(j));</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tj++;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tans=Math.max(ans, j-i);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tse.remove(s.charAt(i));</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\ti++;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">16</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">17</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">18</span></pre></td><td class=\"code\"><pre><span class=\"line\">   &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">19</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr></table></figure>"},{"layout":"post","title":"搭一个自己的vpn","date":"2018-05-18T02:31:20.000Z","_content":"\n\n> 寻思自己搭建一个VPN留着用来翻墙学习游戏，了解到可以使用shadowsocks，再租一个国外的服务器搭好环境基本就可以使用了\n\n<!--more-->\n\n[参考博客](https://www.yigeni.com/build-a-wall-ss-server/)\n\n[参考博客2脚本搭建ss](https://www.flyzy2005.com/fan-qiang/shadowsocks/install-shadowsocks-in-one-command/)\n\n[服务器网址](https://my.vultr.com)\n\n> 当然现在还没有搭 >_<！\n","source":"_posts/2018-05-18-create-vpn.md","raw":"---\nlayout: post\ntitle:  \"搭一个自己的vpn\"\ndate:   2018-05-18 10:31:20\ncategories: learning\ntags: learning\n---\n\n\n> 寻思自己搭建一个VPN留着用来翻墙学习游戏，了解到可以使用shadowsocks，再租一个国外的服务器搭好环境基本就可以使用了\n\n<!--more-->\n\n[参考博客](https://www.yigeni.com/build-a-wall-ss-server/)\n\n[参考博客2脚本搭建ss](https://www.flyzy2005.com/fan-qiang/shadowsocks/install-shadowsocks-in-one-command/)\n\n[服务器网址](https://my.vultr.com)\n\n> 当然现在还没有搭 >_<！\n","slug":"2018-05-18-create-vpn","published":1,"updated":"2019-12-04T14:30:33.351Z","comments":1,"photos":[],"link":"","_id":"ck4f6itp5000573etbca55gh8","content":"<blockquote>\n<p>寻思自己搭建一个VPN留着用来翻墙学习游戏，了解到可以使用shadowsocks，再租一个国外的服务器搭好环境基本就可以使用了</p>\n</blockquote>\n<a id=\"more\"></a>\n\n<p><a href=\"https://www.yigeni.com/build-a-wall-ss-server/\" target=\"_blank\" rel=\"noopener\">参考博客</a></p>\n<p><a href=\"https://www.flyzy2005.com/fan-qiang/shadowsocks/install-shadowsocks-in-one-command/\" target=\"_blank\" rel=\"noopener\">参考博客2脚本搭建ss</a></p>\n<p><a href=\"https://my.vultr.com\" target=\"_blank\" rel=\"noopener\">服务器网址</a></p>\n<blockquote>\n<p>当然现在还没有搭 &gt;_&lt;！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>寻思自己搭建一个VPN留着用来翻墙学习游戏，了解到可以使用shadowsocks，再租一个国外的服务器搭好环境基本就可以使用了</p>\n</blockquote>","more":"<p><a href=\"https://www.yigeni.com/build-a-wall-ss-server/\" target=\"_blank\" rel=\"noopener\">参考博客</a></p>\n<p><a href=\"https://www.flyzy2005.com/fan-qiang/shadowsocks/install-shadowsocks-in-one-command/\" target=\"_blank\" rel=\"noopener\">参考博客2脚本搭建ss</a></p>\n<p><a href=\"https://my.vultr.com\" target=\"_blank\" rel=\"noopener\">服务器网址</a></p>\n<blockquote>\n<p>当然现在还没有搭 &gt;_&lt;！</p>\n</blockquote>"},{"layout":"post","title":"4. Median of Two Sorted Arrays","date":"2018-09-20T02:04:36.000Z","_content":"\n\n\n## Question: There are two sorted arrays nums1 and nums2 of size m and n respectively.Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).You may assume nums1 and nums2 cannot be both empty.\n\n这道题比较简单，就是讲两个数组合并下然后排序，找中位数就可以了\n\n<!--more-->\n\n```java\nclass Solution {\n\tpublic static double findMedianSortedArrays(int[] nums1,int[] nums2) {\n\t\tint[] shuzu=Arrays.copyOf(nums1,nums1.length+nums2.length);\n\t\tSystem.arraycopy(nums2, 0, shuzu, nums1.length, nums2.length);\n\t\tArrays.sort(shuzu);\n\t\tint num=nums1.length+nums2.length;\n\t\tdouble count=0;\n\t\tif(num%2==0) {\n\t\t\t count=(double)(shuzu[num/2-1]+shuzu[num/2])/2;\n\t\t}else {\n\t\t\tcount=(double)shuzu[(num-1)/2];\n\t\t}\n\t\treturn count;\n\t}\n\t}\n```","source":"_posts/2018-09-20-MedianofTwoSortedArrays.md","raw":"---\nlayout: post\ntitle:  \"4. Median of Two Sorted Arrays\"\ndate:   2018-09-20 10:04:36\ncategories: leetcode\ntags: learning Array\n---\n\n\n\n## Question: There are two sorted arrays nums1 and nums2 of size m and n respectively.Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).You may assume nums1 and nums2 cannot be both empty.\n\n这道题比较简单，就是讲两个数组合并下然后排序，找中位数就可以了\n\n<!--more-->\n\n```java\nclass Solution {\n\tpublic static double findMedianSortedArrays(int[] nums1,int[] nums2) {\n\t\tint[] shuzu=Arrays.copyOf(nums1,nums1.length+nums2.length);\n\t\tSystem.arraycopy(nums2, 0, shuzu, nums1.length, nums2.length);\n\t\tArrays.sort(shuzu);\n\t\tint num=nums1.length+nums2.length;\n\t\tdouble count=0;\n\t\tif(num%2==0) {\n\t\t\t count=(double)(shuzu[num/2-1]+shuzu[num/2])/2;\n\t\t}else {\n\t\t\tcount=(double)shuzu[(num-1)/2];\n\t\t}\n\t\treturn count;\n\t}\n\t}\n```","slug":"2018-09-20-MedianofTwoSortedArrays","published":1,"updated":"2019-12-04T14:30:33.103Z","comments":1,"photos":[],"link":"","_id":"ck4f6itp8000673et55csgnif","content":"<h2 id=\"Question-There-are-two-sorted-arrays-nums1-and-nums2-of-size-m-and-n-respectively-Find-the-median-of-the-two-sorted-arrays-The-overall-run-time-complexity-should-be-O-log-m-n-You-may-assume-nums1-and-nums2-cannot-be-both-empty\"><a href=\"#Question-There-are-two-sorted-arrays-nums1-and-nums2-of-size-m-and-n-respectively-Find-the-median-of-the-two-sorted-arrays-The-overall-run-time-complexity-should-be-O-log-m-n-You-may-assume-nums1-and-nums2-cannot-be-both-empty\" class=\"headerlink\" title=\"Question: There are two sorted arrays nums1 and nums2 of size m and n respectively.Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).You may assume nums1 and nums2 cannot be both empty.\"></a>Question: There are two sorted arrays nums1 and nums2 of size m and n respectively.Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).You may assume nums1 and nums2 cannot be both empty.</h2><p>这道题比较简单，就是讲两个数组合并下然后排序，找中位数就可以了</p>\n<a id=\"more\"></a>\n\n<figure class=\"highlight java hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">double</span> <span class=\"hljs-title\">findMedianSortedArrays</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span>[] nums1,<span class=\"hljs-keyword\">int</span>[] nums2)</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">int</span>[] shuzu=Arrays.copyOf(nums1,nums1.length+nums2.length);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\tSystem.arraycopy(nums2, <span class=\"hljs-number\">0</span>, shuzu, nums1.length, nums2.length);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\tArrays.sort(shuzu);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">int</span> num=nums1.length+nums2.length;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">double</span> count=<span class=\"hljs-number\">0</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">if</span>(num%<span class=\"hljs-number\">2</span>==<span class=\"hljs-number\">0</span>) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t count=(<span class=\"hljs-keyword\">double</span>)(shuzu[num/<span class=\"hljs-number\">2</span>-<span class=\"hljs-number\">1</span>]+shuzu[num/<span class=\"hljs-number\">2</span>])/<span class=\"hljs-number\">2</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;<span class=\"hljs-keyword\">else</span> &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tcount=(<span class=\"hljs-keyword\">double</span>)shuzu[(num-<span class=\"hljs-number\">1</span>)/<span class=\"hljs-number\">2</span>];</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-keyword\">return</span> count;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"Question-There-are-two-sorted-arrays-nums1-and-nums2-of-size-m-and-n-respectively-Find-the-median-of-the-two-sorted-arrays-The-overall-run-time-complexity-should-be-O-log-m-n-You-may-assume-nums1-and-nums2-cannot-be-both-empty\"><a href=\"#Question-There-are-two-sorted-arrays-nums1-and-nums2-of-size-m-and-n-respectively-Find-the-median-of-the-two-sorted-arrays-The-overall-run-time-complexity-should-be-O-log-m-n-You-may-assume-nums1-and-nums2-cannot-be-both-empty\" class=\"headerlink\" title=\"Question: There are two sorted arrays nums1 and nums2 of size m and n respectively.Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).You may assume nums1 and nums2 cannot be both empty.\"></a>Question: There are two sorted arrays nums1 and nums2 of size m and n respectively.Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).You may assume nums1 and nums2 cannot be both empty.</h2><p>这道题比较简单，就是讲两个数组合并下然后排序，找中位数就可以了</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">double</span> <span class=\"title\">findMedianSortedArrays</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums1,<span class=\"keyword\">int</span>[] nums2)</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">int</span>[] shuzu=Arrays.copyOf(nums1,nums1.length+nums2.length);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\tSystem.arraycopy(nums2, <span class=\"number\">0</span>, shuzu, nums1.length, nums2.length);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\tArrays.sort(shuzu);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">int</span> num=nums1.length+nums2.length;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">double</span> count=<span class=\"number\">0</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">if</span>(num%<span class=\"number\">2</span>==<span class=\"number\">0</span>) &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t count=(<span class=\"keyword\">double</span>)(shuzu[num/<span class=\"number\">2</span>-<span class=\"number\">1</span>]+shuzu[num/<span class=\"number\">2</span>])/<span class=\"number\">2</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> &#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tcount=(<span class=\"keyword\">double</span>)shuzu[(num-<span class=\"number\">1</span>)/<span class=\"number\">2</span>];</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"keyword\">return</span> count;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#125;</span></pre></td></tr></table></figure>"},{"layout":"post","title":"面试搜狗实习","date":"2018-09-21T09:34:36.000Z","_content":"\n\n\n### 面试搜狗的实习，估计凉了\n\n<!--more-->\n\n  之前没事投了几个简历，也记不清这次是 java 还是android的了，还有点不太想去。。\n  寻思了下还是过去吧，面试下还能增长下经验，了解下今后的学习方向。\n  过去后，先去了前台登记了下，等一会面试的人过来了，叫到一个屋子里面试。先给了我一份试题，一串代码关于继承和上转型的，有一些 activity的lanchmode啥的 sevice的生命周期啥的，不太会;后面是两道编程题，比较简单，一个是用链表实现堆栈的push pop peak，一个是查找字符串里第一个不重复的字符。自我介绍了下，聊了下项目，项目怎么实现的啥的，后来问了点java的多态啥的，有点忘了，面试中我想起来，这个投的应该是android，他说了一句话，看你做的东西应该是没有调用过一些android核心的api，应该是凉了。\n  \n  算是个经验，不会的东西还有很多，没事多刷刷leetcode，把java研究精通些。","source":"_posts/2018-09-21-sougoumianshi.md","raw":"---\nlayout: post\ntitle:  \"面试搜狗实习\"\ndate:   2018-09-21 17:34:36\ncategories: note\ntags: interview\n---\n\n\n\n### 面试搜狗的实习，估计凉了\n\n<!--more-->\n\n  之前没事投了几个简历，也记不清这次是 java 还是android的了，还有点不太想去。。\n  寻思了下还是过去吧，面试下还能增长下经验，了解下今后的学习方向。\n  过去后，先去了前台登记了下，等一会面试的人过来了，叫到一个屋子里面试。先给了我一份试题，一串代码关于继承和上转型的，有一些 activity的lanchmode啥的 sevice的生命周期啥的，不太会;后面是两道编程题，比较简单，一个是用链表实现堆栈的push pop peak，一个是查找字符串里第一个不重复的字符。自我介绍了下，聊了下项目，项目怎么实现的啥的，后来问了点java的多态啥的，有点忘了，面试中我想起来，这个投的应该是android，他说了一句话，看你做的东西应该是没有调用过一些android核心的api，应该是凉了。\n  \n  算是个经验，不会的东西还有很多，没事多刷刷leetcode，把java研究精通些。","slug":"2018-09-21-sougoumianshi","published":1,"updated":"2019-12-04T14:30:33.419Z","comments":1,"photos":[],"link":"","_id":"ck4f6itpd000a73et3bl9azfn","content":"<h3 id=\"面试搜狗的实习，估计凉了\"><a href=\"#面试搜狗的实习，估计凉了\" class=\"headerlink\" title=\"面试搜狗的实习，估计凉了\"></a>面试搜狗的实习，估计凉了</h3><a id=\"more\"></a>\n\n<p>  之前没事投了几个简历，也记不清这次是 java 还是android的了，还有点不太想去。。<br>  寻思了下还是过去吧，面试下还能增长下经验，了解下今后的学习方向。<br>  过去后，先去了前台登记了下，等一会面试的人过来了，叫到一个屋子里面试。先给了我一份试题，一串代码关于继承和上转型的，有一些 activity的lanchmode啥的 sevice的生命周期啥的，不太会;后面是两道编程题，比较简单，一个是用链表实现堆栈的push pop peak，一个是查找字符串里第一个不重复的字符。自我介绍了下，聊了下项目，项目怎么实现的啥的，后来问了点java的多态啥的，有点忘了，面试中我想起来，这个投的应该是android，他说了一句话，看你做的东西应该是没有调用过一些android核心的api，应该是凉了。</p>\n<p>  算是个经验，不会的东西还有很多，没事多刷刷leetcode，把java研究精通些。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"面试搜狗的实习，估计凉了\"><a href=\"#面试搜狗的实习，估计凉了\" class=\"headerlink\" title=\"面试搜狗的实习，估计凉了\"></a>面试搜狗的实习，估计凉了</h3>","more":"<p>  之前没事投了几个简历，也记不清这次是 java 还是android的了，还有点不太想去。。<br>  寻思了下还是过去吧，面试下还能增长下经验，了解下今后的学习方向。<br>  过去后，先去了前台登记了下，等一会面试的人过来了，叫到一个屋子里面试。先给了我一份试题，一串代码关于继承和上转型的，有一些 activity的lanchmode啥的 sevice的生命周期啥的，不太会;后面是两道编程题，比较简单，一个是用链表实现堆栈的push pop peak，一个是查找字符串里第一个不重复的字符。自我介绍了下，聊了下项目，项目怎么实现的啥的，后来问了点java的多态啥的，有点忘了，面试中我想起来，这个投的应该是android，他说了一句话，看你做的东西应该是没有调用过一些android核心的api，应该是凉了。</p>\n<p>  算是个经验，不会的东西还有很多，没事多刷刷leetcode，把java研究精通些。</p>"},{"layout":"post","title":"232. Implement Queue using Stacks","date":"2018-09-22T14:59:36.000Z","_content":"\n\n\n# Question: Implement the following operations of a queue using stacks.\n\n  用两个栈就可以实现一个队列的操作，注意判断栈是否为空\n  \n  <!--more-->\n  \n```java\n\tclass MyQueue {\n    /** Initialize your data structure here. */\n     Stack<Integer> stack1=new Stack<>();\n\tStack<Integer> stack2=new Stack<>();\n    public MyQueue() {\n       \n    }\n    \n    public void push(int x) {\n\t\t\twhile(!stack2.isEmpty())\n\t\t\t\tstack1.push(stack2.pop());\n\t\t\tstack1.push(x);\n\t\t}\n\t\tpublic int pop() {\n\t\t\twhile(!stack1.isEmpty())\n\t\t\t\tstack2.push(stack1.pop());\n\t\t\tint x=stack2.pop();\n\t\t\treturn x;\n\t\t}\n\t\tpublic int peek() {\n\t\t\twhile(!stack1.isEmpty())\n\t\t\t\tstack2.push(stack1.pop());\n\t\t\treturn stack2.peek();\n\t\t}\n\t\tpublic boolean empty() {\n\t\t\tif(stack1.isEmpty()&&stack2.isEmpty())\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n}\n```","source":"_posts/2018-09-22-ImplementQueueusinggStacks.md","raw":"---\nlayout: post\ntitle:  \"232. Implement Queue using Stacks\"\ndate:   2018-09-22 22:59:36\ncategories: leetcode\ntags: stack\n---\n\n\n\n# Question: Implement the following operations of a queue using stacks.\n\n  用两个栈就可以实现一个队列的操作，注意判断栈是否为空\n  \n  <!--more-->\n  \n```java\n\tclass MyQueue {\n    /** Initialize your data structure here. */\n     Stack<Integer> stack1=new Stack<>();\n\tStack<Integer> stack2=new Stack<>();\n    public MyQueue() {\n       \n    }\n    \n    public void push(int x) {\n\t\t\twhile(!stack2.isEmpty())\n\t\t\t\tstack1.push(stack2.pop());\n\t\t\tstack1.push(x);\n\t\t}\n\t\tpublic int pop() {\n\t\t\twhile(!stack1.isEmpty())\n\t\t\t\tstack2.push(stack1.pop());\n\t\t\tint x=stack2.pop();\n\t\t\treturn x;\n\t\t}\n\t\tpublic int peek() {\n\t\t\twhile(!stack1.isEmpty())\n\t\t\t\tstack2.push(stack1.pop());\n\t\t\treturn stack2.peek();\n\t\t}\n\t\tpublic boolean empty() {\n\t\t\tif(stack1.isEmpty()&&stack2.isEmpty())\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n}\n```","slug":"2018-09-22-ImplementQueueusinggStacks","published":1,"updated":"2019-12-04T14:30:33.247Z","comments":1,"photos":[],"link":"","_id":"ck4f6itpf000c73et6558dbyd","content":"<h1 id=\"Question-Implement-the-following-operations-of-a-queue-using-stacks\"><a href=\"#Question-Implement-the-following-operations-of-a-queue-using-stacks\" class=\"headerlink\" title=\"Question: Implement the following operations of a queue using stacks.\"></a>Question: Implement the following operations of a queue using stacks.</h1><p>  用两个栈就可以实现一个队列的操作，注意判断栈是否为空</p>\n  <a id=\"more\"></a>\n\n<figure class=\"highlight java hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyQueue</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"hljs-comment\">/** Initialize your data structure here. */</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">     Stack&lt;Integer&gt; stack1=<span class=\"hljs-keyword\">new</span> Stack&lt;&gt;();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\">\tStack&lt;Integer&gt; stack2=<span class=\"hljs-keyword\">new</span> Stack&lt;&gt;();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">MyQueue</span><span class=\"hljs-params\">()</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">       </span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">    </span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">push</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> x)</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">while</span>(!stack2.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\tstack1.push(stack2.pop());</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tstack1.push(x);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">pop</span><span class=\"hljs-params\">()</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">while</span>(!stack1.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">16</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\tstack2.push(stack1.pop());</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">17</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">int</span> x=stack2.pop();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">18</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">return</span> x;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">19</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">20</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">peek</span><span class=\"hljs-params\">()</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">21</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">while</span>(!stack1.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">22</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\tstack2.push(stack1.pop());</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">23</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">return</span> stack2.peek();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">24</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">25</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">boolean</span> <span class=\"hljs-title\">empty</span><span class=\"hljs-params\">()</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">26</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">if</span>(stack1.isEmpty()&amp;&amp;stack2.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">27</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">true</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">28</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"hljs-keyword\">else</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">29</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">30</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">31</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"Question-Implement-the-following-operations-of-a-queue-using-stacks\"><a href=\"#Question-Implement-the-following-operations-of-a-queue-using-stacks\" class=\"headerlink\" title=\"Question: Implement the following operations of a queue using stacks.\"></a>Question: Implement the following operations of a queue using stacks.</h1><p>  用两个栈就可以实现一个队列的操作，注意判断栈是否为空</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyQueue</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">/** Initialize your data structure here. */</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">     Stack&lt;Integer&gt; stack1=<span class=\"keyword\">new</span> Stack&lt;&gt;();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\">\tStack&lt;Integer&gt; stack2=<span class=\"keyword\">new</span> Stack&lt;&gt;();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyQueue</span><span class=\"params\">()</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">       </span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">    </span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(!stack2.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\tstack1.push(stack2.pop());</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\tstack1.push(x);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(!stack1.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">16</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\tstack2.push(stack1.pop());</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">17</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x=stack2.pop();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">18</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> x;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">19</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">20</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">peek</span><span class=\"params\">()</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">21</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(!stack1.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">22</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\tstack2.push(stack1.pop());</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">23</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> stack2.peek();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">24</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">25</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">empty</span><span class=\"params\">()</span> </span>&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">26</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(stack1.isEmpty()&amp;&amp;stack2.isEmpty())</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">27</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">28</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t<span class=\"keyword\">else</span></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">29</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">30</span></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">31</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr></table></figure>"},{"layout":"post","title":"Java编程思想学习小结","date":"2019-01-16T02:47:30.000Z","_content":"\n\n# 这段时间学习了下Java编程思想\n> 之前做项目一些不懂的地方，通过这个看书找到很多答案，也知道不太会的问题应该去哪找了，感觉对自己很有帮助。\n<!--more-->\n> 这本书看的时候并没有完完全全详细的看完，看了一些重点章节 仍有很多不会的地方，后续还要通过博客学习完善，甚至得再看看书。最后，感觉这本书对于java学习的进阶很有帮助。\n","source":"_posts/2019-01-16-ThinkInJava.md","raw":"---\nlayout: post\ntitle:  \"Java编程思想学习小结\"\ndate:   2019-01-16 10:47:30\ncategories: 读书\ntags: learning\n---\n\n\n# 这段时间学习了下Java编程思想\n> 之前做项目一些不懂的地方，通过这个看书找到很多答案，也知道不太会的问题应该去哪找了，感觉对自己很有帮助。\n<!--more-->\n> 这本书看的时候并没有完完全全详细的看完，看了一些重点章节 仍有很多不会的地方，后续还要通过博客学习完善，甚至得再看看书。最后，感觉这本书对于java学习的进阶很有帮助。\n","slug":"2019-01-16-ThinkInJava","published":1,"updated":"2019-12-04T14:30:33.067Z","comments":1,"photos":[],"link":"","_id":"ck4f6itpi000h73et4bg99r50","content":"<h1 id=\"这段时间学习了下Java编程思想\"><a href=\"#这段时间学习了下Java编程思想\" class=\"headerlink\" title=\"这段时间学习了下Java编程思想\"></a>这段时间学习了下Java编程思想</h1><blockquote>\n<p>之前做项目一些不懂的地方，通过这个看书找到很多答案，也知道不太会的问题应该去哪找了，感觉对自己很有帮助。</p>\n</blockquote>\n<a id=\"more\"></a>\n<blockquote>\n<p>这本书看的时候并没有完完全全详细的看完，看了一些重点章节 仍有很多不会的地方，后续还要通过博客学习完善，甚至得再看看书。最后，感觉这本书对于java学习的进阶很有帮助。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"这段时间学习了下Java编程思想\"><a href=\"#这段时间学习了下Java编程思想\" class=\"headerlink\" title=\"这段时间学习了下Java编程思想\"></a>这段时间学习了下Java编程思想</h1><blockquote>\n<p>之前做项目一些不懂的地方，通过这个看书找到很多答案，也知道不太会的问题应该去哪找了，感觉对自己很有帮助。</p>\n</blockquote>","more":"<blockquote>\n<p>这本书看的时候并没有完完全全详细的看完，看了一些重点章节 仍有很多不会的地方，后续还要通过博客学习完善，甚至得再看看书。最后，感觉这本书对于java学习的进阶很有帮助。</p>\n</blockquote>"},{"layout":"post","title":"大话设计模式学习小结","date":"2019-01-26T02:47:30.000Z","_content":"\n\n\n# 策略模式\n它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化，不会影响到算法的客户\n## 单一职责原则\n就一个类而言，应该只有一个引起它变化的原因\n## 开放封闭原则\n软件实体应该可以扩展，但是不可修改（增加新需求增加新代码）\n<!--more-->\n## 依赖倒转原则\n针对接口编程，不要对实现编程\n- 高层模块不应该依赖底层模块，两个都应该依赖抽象\n- 抽象不应该依赖细节，细节应该依赖抽象\n## 里氏代换原则\n一个软件实体如果使用的是一个父类的话，那么一定适用于其子类，而且它察觉不出父类对象和子类对象的区别。即在软件里面，把父类都替换成它的子类，程序的行为没有变化。\n*子类型必须能够替换掉它们的父类型*\n**通俗来讲，就是高层模块依赖接口，具体实现则是继承了此接口的实现类**\n\n# 装饰模式\n动态地给一个对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更为灵活\n\n# 代理模式\n为其他对象提供一种代理以控制对这个对象的访问\n# 工厂方法模式\n定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类\n# 原型模式\n用原型实例制定创建对象的种类，并且通过拷贝这些原型创建新的对象\n\n","source":"_posts/2019-01-26-DesignPattern.md","raw":"---\nlayout: post\ntitle:  \"大话设计模式学习小结\"\ndate:   2019-01-26 10:47:30\ncategories: 读书\ntags: learning\n---\n\n\n\n# 策略模式\n它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化，不会影响到算法的客户\n## 单一职责原则\n就一个类而言，应该只有一个引起它变化的原因\n## 开放封闭原则\n软件实体应该可以扩展，但是不可修改（增加新需求增加新代码）\n<!--more-->\n## 依赖倒转原则\n针对接口编程，不要对实现编程\n- 高层模块不应该依赖底层模块，两个都应该依赖抽象\n- 抽象不应该依赖细节，细节应该依赖抽象\n## 里氏代换原则\n一个软件实体如果使用的是一个父类的话，那么一定适用于其子类，而且它察觉不出父类对象和子类对象的区别。即在软件里面，把父类都替换成它的子类，程序的行为没有变化。\n*子类型必须能够替换掉它们的父类型*\n**通俗来讲，就是高层模块依赖接口，具体实现则是继承了此接口的实现类**\n\n# 装饰模式\n动态地给一个对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更为灵活\n\n# 代理模式\n为其他对象提供一种代理以控制对这个对象的访问\n# 工厂方法模式\n定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类\n# 原型模式\n用原型实例制定创建对象的种类，并且通过拷贝这些原型创建新的对象\n\n","slug":"2019-01-26-DesignPattern","published":1,"updated":"2019-12-04T14:30:33.135Z","comments":1,"photos":[],"link":"","_id":"ck4f6itpk000j73etd7f59i7s","content":"<h1 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h1><p>它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化，不会影响到算法的客户</p>\n<h2 id=\"单一职责原则\"><a href=\"#单一职责原则\" class=\"headerlink\" title=\"单一职责原则\"></a>单一职责原则</h2><p>就一个类而言，应该只有一个引起它变化的原因</p>\n<h2 id=\"开放封闭原则\"><a href=\"#开放封闭原则\" class=\"headerlink\" title=\"开放封闭原则\"></a>开放封闭原则</h2><p>软件实体应该可以扩展，但是不可修改（增加新需求增加新代码）</p>\n<a id=\"more\"></a>\n<h2 id=\"依赖倒转原则\"><a href=\"#依赖倒转原则\" class=\"headerlink\" title=\"依赖倒转原则\"></a>依赖倒转原则</h2><p>针对接口编程，不要对实现编程</p>\n<ul>\n<li>高层模块不应该依赖底层模块，两个都应该依赖抽象</li>\n<li>抽象不应该依赖细节，细节应该依赖抽象<h2 id=\"里氏代换原则\"><a href=\"#里氏代换原则\" class=\"headerlink\" title=\"里氏代换原则\"></a>里氏代换原则</h2>一个软件实体如果使用的是一个父类的话，那么一定适用于其子类，而且它察觉不出父类对象和子类对象的区别。即在软件里面，把父类都替换成它的子类，程序的行为没有变化。</li>\n</ul>\n<p><em>子类型必须能够替换掉它们的父类型</em><br><strong>通俗来讲，就是高层模块依赖接口，具体实现则是继承了此接口的实现类</strong></p>\n<h1 id=\"装饰模式\"><a href=\"#装饰模式\" class=\"headerlink\" title=\"装饰模式\"></a>装饰模式</h1><p>动态地给一个对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更为灵活</p>\n<h1 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h1><p>为其他对象提供一种代理以控制对这个对象的访问</p>\n<h1 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h1><p>定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类</p>\n<h1 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h1><p>用原型实例制定创建对象的种类，并且通过拷贝这些原型创建新的对象</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"策略模式\"><a href=\"#策略模式\" class=\"headerlink\" title=\"策略模式\"></a>策略模式</h1><p>它定义了算法家族，分别封装起来，让它们之间可以互相替换，此模式让算法的变化，不会影响到算法的客户</p>\n<h2 id=\"单一职责原则\"><a href=\"#单一职责原则\" class=\"headerlink\" title=\"单一职责原则\"></a>单一职责原则</h2><p>就一个类而言，应该只有一个引起它变化的原因</p>\n<h2 id=\"开放封闭原则\"><a href=\"#开放封闭原则\" class=\"headerlink\" title=\"开放封闭原则\"></a>开放封闭原则</h2><p>软件实体应该可以扩展，但是不可修改（增加新需求增加新代码）</p>","more":"<h2 id=\"依赖倒转原则\"><a href=\"#依赖倒转原则\" class=\"headerlink\" title=\"依赖倒转原则\"></a>依赖倒转原则</h2><p>针对接口编程，不要对实现编程</p>\n<ul>\n<li>高层模块不应该依赖底层模块，两个都应该依赖抽象</li>\n<li>抽象不应该依赖细节，细节应该依赖抽象<h2 id=\"里氏代换原则\"><a href=\"#里氏代换原则\" class=\"headerlink\" title=\"里氏代换原则\"></a>里氏代换原则</h2>一个软件实体如果使用的是一个父类的话，那么一定适用于其子类，而且它察觉不出父类对象和子类对象的区别。即在软件里面，把父类都替换成它的子类，程序的行为没有变化。</li>\n</ul>\n<p><em>子类型必须能够替换掉它们的父类型</em><br><strong>通俗来讲，就是高层模块依赖接口，具体实现则是继承了此接口的实现类</strong></p>\n<h1 id=\"装饰模式\"><a href=\"#装饰模式\" class=\"headerlink\" title=\"装饰模式\"></a>装饰模式</h1><p>动态地给一个对象添加一些额外的职责，就增加功能来说，装饰模式比生成子类更为灵活</p>\n<h1 id=\"代理模式\"><a href=\"#代理模式\" class=\"headerlink\" title=\"代理模式\"></a>代理模式</h1><p>为其他对象提供一种代理以控制对这个对象的访问</p>\n<h1 id=\"工厂方法模式\"><a href=\"#工厂方法模式\" class=\"headerlink\" title=\"工厂方法模式\"></a>工厂方法模式</h1><p>定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类</p>\n<h1 id=\"原型模式\"><a href=\"#原型模式\" class=\"headerlink\" title=\"原型模式\"></a>原型模式</h1><p>用原型实例制定创建对象的种类，并且通过拷贝这些原型创建新的对象</p>"},{"layout":"post","title":"iqiyi实习总结","date":"2019-11-26T07:30:00.000Z","_content":"\n\n- 在爱奇艺实习的经验总结\n\n今年算是在7月到9月在爱奇艺实习了两个月，算是偷偷的跑了出去。说实话这两个月在爱奇艺学到的东西不多，接手的项目并不是一个线上使用的能够盈利的项目。\n而是一个公司内部使用的一个持续集成、持续部署的系统，给爱奇艺电视打包各种不同的软件。用的是ssh框架，比较老，给自己的活主要是一些curd，也包括修改前端页面jsp。\n唯一有点任务量的算是封装httpclient的api上传下载文件，另一个算是这个系统的核心业务了，编写使用jenkins api的通用工具类，自己写完后就将这个工具类开源了，还打包推到了maven中央仓库。。。\n<!--more-->\n<br>\n之前都是用springboot写项目，虽然大四的时候看了些javaweb的教程，学习了jsp、servlet，但是也不是太明白。通过做这个项目算是明白了spring项目的启动原理，ioc、aop的一些核心的东西，\n当时在公司里明白了一个http请求到tomcat处理后分发到spring再处理后，再到业务处理完返回的整个流程的时候，特别兴奋，也模仿github上的一个项目编写了一个小的tomcat demo.在公司的时候\n，同时看了些左潇龙大佬的设计模式博客，受益颇多。对java的继承 泛型理解多了些，尝试编写通用型的代码，注意编码时的解耦。jvm这本书读了内存那块，看了并发实战的一部分内容。\n<br>\n这两个月一下子就过去了，学到了挺多东西，但是又感觉没有多少，技术水平还得继续增强。\n<br>\n掌握好基础，多实践多学习！","source":"_posts/2019-11-26-iqiyi.md","raw":"---\nlayout: post\ntitle:  \"iqiyi实习总结\"\ndate:   2019-11-26 15:30:00\ncategories: note\ntags: interview\n---\n\n\n- 在爱奇艺实习的经验总结\n\n今年算是在7月到9月在爱奇艺实习了两个月，算是偷偷的跑了出去。说实话这两个月在爱奇艺学到的东西不多，接手的项目并不是一个线上使用的能够盈利的项目。\n而是一个公司内部使用的一个持续集成、持续部署的系统，给爱奇艺电视打包各种不同的软件。用的是ssh框架，比较老，给自己的活主要是一些curd，也包括修改前端页面jsp。\n唯一有点任务量的算是封装httpclient的api上传下载文件，另一个算是这个系统的核心业务了，编写使用jenkins api的通用工具类，自己写完后就将这个工具类开源了，还打包推到了maven中央仓库。。。\n<!--more-->\n<br>\n之前都是用springboot写项目，虽然大四的时候看了些javaweb的教程，学习了jsp、servlet，但是也不是太明白。通过做这个项目算是明白了spring项目的启动原理，ioc、aop的一些核心的东西，\n当时在公司里明白了一个http请求到tomcat处理后分发到spring再处理后，再到业务处理完返回的整个流程的时候，特别兴奋，也模仿github上的一个项目编写了一个小的tomcat demo.在公司的时候\n，同时看了些左潇龙大佬的设计模式博客，受益颇多。对java的继承 泛型理解多了些，尝试编写通用型的代码，注意编码时的解耦。jvm这本书读了内存那块，看了并发实战的一部分内容。\n<br>\n这两个月一下子就过去了，学到了挺多东西，但是又感觉没有多少，技术水平还得继续增强。\n<br>\n掌握好基础，多实践多学习！","slug":"2019-11-26-iqiyi","published":1,"updated":"2019-12-04T14:30:32.935Z","comments":1,"photos":[],"link":"","_id":"ck4f6itpm000o73etdsnyeafa","content":"<ul>\n<li>在爱奇艺实习的经验总结</li>\n</ul>\n<p>今年算是在7月到9月在爱奇艺实习了两个月，算是偷偷的跑了出去。说实话这两个月在爱奇艺学到的东西不多，接手的项目并不是一个线上使用的能够盈利的项目。<br>而是一个公司内部使用的一个持续集成、持续部署的系统，给爱奇艺电视打包各种不同的软件。用的是ssh框架，比较老，给自己的活主要是一些curd，也包括修改前端页面jsp。<br>唯一有点任务量的算是封装httpclient的api上传下载文件，另一个算是这个系统的核心业务了，编写使用jenkins api的通用工具类，自己写完后就将这个工具类开源了，还打包推到了maven中央仓库。。。</p>\n<a id=\"more\"></a>\n<br>\n之前都是用springboot写项目，虽然大四的时候看了些javaweb的教程，学习了jsp、servlet，但是也不是太明白。通过做这个项目算是明白了spring项目的启动原理，ioc、aop的一些核心的东西，\n当时在公司里明白了一个http请求到tomcat处理后分发到spring再处理后，再到业务处理完返回的整个流程的时候，特别兴奋，也模仿github上的一个项目编写了一个小的tomcat demo.在公司的时候\n，同时看了些左潇龙大佬的设计模式博客，受益颇多。对java的继承 泛型理解多了些，尝试编写通用型的代码，注意编码时的解耦。jvm这本书读了内存那块，看了并发实战的一部分内容。\n<br>\n这两个月一下子就过去了，学到了挺多东西，但是又感觉没有多少，技术水平还得继续增强。\n<br>\n掌握好基础，多实践多学习！","site":{"data":{}},"excerpt":"<ul>\n<li>在爱奇艺实习的经验总结</li>\n</ul>\n<p>今年算是在7月到9月在爱奇艺实习了两个月，算是偷偷的跑了出去。说实话这两个月在爱奇艺学到的东西不多，接手的项目并不是一个线上使用的能够盈利的项目。<br>而是一个公司内部使用的一个持续集成、持续部署的系统，给爱奇艺电视打包各种不同的软件。用的是ssh框架，比较老，给自己的活主要是一些curd，也包括修改前端页面jsp。<br>唯一有点任务量的算是封装httpclient的api上传下载文件，另一个算是这个系统的核心业务了，编写使用jenkins api的通用工具类，自己写完后就将这个工具类开源了，还打包推到了maven中央仓库。。。</p>","more":"<br>\n之前都是用springboot写项目，虽然大四的时候看了些javaweb的教程，学习了jsp、servlet，但是也不是太明白。通过做这个项目算是明白了spring项目的启动原理，ioc、aop的一些核心的东西，\n当时在公司里明白了一个http请求到tomcat处理后分发到spring再处理后，再到业务处理完返回的整个流程的时候，特别兴奋，也模仿github上的一个项目编写了一个小的tomcat demo.在公司的时候\n，同时看了些左潇龙大佬的设计模式博客，受益颇多。对java的继承 泛型理解多了些，尝试编写通用型的代码，注意编码时的解耦。jvm这本书读了内存那块，看了并发实战的一部分内容。\n<br>\n这两个月一下子就过去了，学到了挺多东西，但是又感觉没有多少，技术水平还得继续增强。\n<br>\n掌握好基础，多实践多学习！"},{"layout":"post","title":"leetcode练习汇总（持续更新）","date":"2019-01-16T02:42:10.000Z","_content":"\n\n> 在个人github上新建了一个leetcode仓库，以后的练习将提交到此处\n\n\n[地址](https://github.com/csxiaoshang/leetcode)\n","source":"_posts/2019-01-16-leetcode.md","raw":"---\nlayout: post\ntitle:  \"leetcode练习汇总（持续更新）\"\ndate:   2019-01-16 10:42:10\ncategories: leetcode\ntags: learning \n---\n\n\n> 在个人github上新建了一个leetcode仓库，以后的练习将提交到此处\n\n\n[地址](https://github.com/csxiaoshang/leetcode)\n","slug":"2019-01-16-leetcode","published":1,"updated":"2019-12-04T14:30:32.995Z","comments":1,"photos":[],"link":"","_id":"ck4f6itps000r73et3tehfzyr","content":"<blockquote>\n<p>在个人github上新建了一个leetcode仓库，以后的练习将提交到此处</p>\n</blockquote>\n<p><a href=\"https://github.com/csxiaoshang/leetcode\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>在个人github上新建了一个leetcode仓库，以后的练习将提交到此处</p>\n</blockquote>\n<p><a href=\"https://github.com/csxiaoshang/leetcode\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n"},{"title":"2019年终总结","date":"2019-12-21T04:33:05.000Z","_content":"\n 2019年还剩下10天，马上就要2020年了<br>\n 回想过去的这一年里，有收获、也有失落、五味杂陈。\n <br>\n 感觉人成长变化都是由一件件事情驱动的，如果没有经过经历我还是我，很难有实质性的变化。\n \n <!--more-->\n \n如果说过去的2018年是由毕业到读研的一个过渡，让我重新体会到那种高中步入到大学的那种感觉；\n这2019年感觉便是对新阶段人生的加深、熟悉、进步。\n\n - 学习工作\n \n    1. spring实战\n    2. java编程思想\n    3. redis设计与实现\n    4. 图解http\n    5. 深入理解JVM\n    6. 大型网站技术架构\n    7. 程序员修炼之道\n    8. effect java\n    9. maven实战\n    10. java8实战\n    11. 阿里巴巴Java开发手册\n    12. netty实战（未看完）\n    13. spring cloud微服务实战（未看完）\n    14. 高效能人士的七个习惯（未看完）\n    15. 亲密关系（未看完）\n    16. 球状闪电\n    17. 数不清的技术博客（自我感觉多数未消化）\n    \n这样一一列出来，发现也是读了不少书，其中以技术书籍为主。去年读研半年，课余时间算是刚刚入门，过年回来后，\n便开始疯狂补充知识，其中有个致命的问题就是理论走在了前面 实践没有跟上。这个问题在开了新项目路边停车、在实习后\n得到了一定程度的解决。\n\n这一年编码能力、阅读代码的能力都得到了一定程度的提高，从最开始阅读java源码都有问题、速度慢、不是特别理解等，到现在阅读速度上、理解上都有很大的提高。\n\n刷题： \n\n    刷题刷的有些敷衍，在牛客上刷完了剑指offer、程序员面试金典的题，暗示自我感觉效果不好。在碰到不太会的问题时就去看了解答，但是也没有回过头来\n    认真思考。接下来到到寒假结束有一个半月时间，承诺自己最少在leetcode刷100题。\n\n比赛： \n    \n    1.参加了腾讯的微信小程序比赛，最后进了复赛但是也没有拿到名次，\n    2.阿里第五届中间件比赛，一开始直接懵逼了，各种不会。使劲搞了一番 616/4095,意料之内\n    等赛事结束后，又进行了一波复盘 照着大佬的代码思考一番，敲出一个版本，在自适应负载均衡比赛中 45/498，还算满意\n    还有一个消息队列的题目一直没吃透，抽时间再搞一稿\n    \n参加比赛确实能学到很多东西，这次参加中间件比赛，接触到了很多之前不懂的东西，很有收获\n\n实习：\n\n    在七月份的时候，偷偷出去实习了两个月。在爱奇艺做的是一个内部使用的系统，用的技术也比较老 ssh这一套技术框架。自己对待的比较认真，老大给的任务都\n    非常认真的完成，只不过有时候，完成了也不提交代码，磨一点时间自己学习。写些CURD、封装接口、OSS使用、jenkins使用、将设计模式用到代码中 也学到了很多东西，感觉最重要的是\n    通过做这个中老的框架的东西，让我对spring、tomcat有了更好的理解，梳理了从请求发出到返回的整个过程、细节。仿照开源项目，写demo tomcat、spring等，也给\n    开源项目贡献了一次代码，虽然只是文本翻译... 这次实习过程对自己很重要，也很感谢老大\n    \n    \n- 生活\n\n生活上还是自己一个人，孤单倒不孤独，可能是真的单身习惯了；有时候去参加联谊、想要找个女朋友，但是感觉找不找得到也无所谓。并不是多放在心上，宁愿\n更多一点时间待着实验室里...<br>\n实习时候碰到一个女生，做了件好蠢的事情...<br>\n最近 感情上有碰到些问题，有点不知道自己该不该接受，有点想逃避、有点想接受...不愿多想、感觉自己又会犯错误\n\n深深的感觉到 父母因为文化问题有些愚昧，自己也成年好多年了，家里有些事情应该帮他们做主意；一转眼弟弟也上初中了，马上该上高中了，\n感觉跟当初的我一样，知道好好学习，但是也会特别想玩。有时想将自己遗憾没有做的事情，嘱咐他 想让他不要错过，但是往往事与愿违。<br>\n姨姐今年也结婚了，最开始还考虑要不要回家...看到她结婚真好<br>\n生活有条不紊，注意作息 健康饮食\n\n- 方法论\n\n这一年加深了对理论联系实践、从实践中来到实践中去的认知\n\n在学习生活中，光学习理论知识不实践、光实践不增强理论知识都不行，只有两者不同程度的并进才能达到较好的效果。\n比如，实践碰到问题了，回过头来学习理论知识，而后再实践；从实践中学习，实践中验证学到的东西，不断重复这个过程\n\n- 明年承诺\n\n1. leetcode刷300题\n2. 拿到alibaba的offer\n3. 竹笛最少两首拿手曲子\n4. 英语达到能够听明白歌曲的程度\n5. 日语学习完新标准第一册\n6. 象棋稳定业二\n","source":"_posts/2019年终总结.md","raw":"---\ntitle: 2019年终总结\ndate: 2019-12-21 12:33:05\ncategories: 程序人生\n---\n\n 2019年还剩下10天，马上就要2020年了<br>\n 回想过去的这一年里，有收获、也有失落、五味杂陈。\n <br>\n 感觉人成长变化都是由一件件事情驱动的，如果没有经过经历我还是我，很难有实质性的变化。\n \n <!--more-->\n \n如果说过去的2018年是由毕业到读研的一个过渡，让我重新体会到那种高中步入到大学的那种感觉；\n这2019年感觉便是对新阶段人生的加深、熟悉、进步。\n\n - 学习工作\n \n    1. spring实战\n    2. java编程思想\n    3. redis设计与实现\n    4. 图解http\n    5. 深入理解JVM\n    6. 大型网站技术架构\n    7. 程序员修炼之道\n    8. effect java\n    9. maven实战\n    10. java8实战\n    11. 阿里巴巴Java开发手册\n    12. netty实战（未看完）\n    13. spring cloud微服务实战（未看完）\n    14. 高效能人士的七个习惯（未看完）\n    15. 亲密关系（未看完）\n    16. 球状闪电\n    17. 数不清的技术博客（自我感觉多数未消化）\n    \n这样一一列出来，发现也是读了不少书，其中以技术书籍为主。去年读研半年，课余时间算是刚刚入门，过年回来后，\n便开始疯狂补充知识，其中有个致命的问题就是理论走在了前面 实践没有跟上。这个问题在开了新项目路边停车、在实习后\n得到了一定程度的解决。\n\n这一年编码能力、阅读代码的能力都得到了一定程度的提高，从最开始阅读java源码都有问题、速度慢、不是特别理解等，到现在阅读速度上、理解上都有很大的提高。\n\n刷题： \n\n    刷题刷的有些敷衍，在牛客上刷完了剑指offer、程序员面试金典的题，暗示自我感觉效果不好。在碰到不太会的问题时就去看了解答，但是也没有回过头来\n    认真思考。接下来到到寒假结束有一个半月时间，承诺自己最少在leetcode刷100题。\n\n比赛： \n    \n    1.参加了腾讯的微信小程序比赛，最后进了复赛但是也没有拿到名次，\n    2.阿里第五届中间件比赛，一开始直接懵逼了，各种不会。使劲搞了一番 616/4095,意料之内\n    等赛事结束后，又进行了一波复盘 照着大佬的代码思考一番，敲出一个版本，在自适应负载均衡比赛中 45/498，还算满意\n    还有一个消息队列的题目一直没吃透，抽时间再搞一稿\n    \n参加比赛确实能学到很多东西，这次参加中间件比赛，接触到了很多之前不懂的东西，很有收获\n\n实习：\n\n    在七月份的时候，偷偷出去实习了两个月。在爱奇艺做的是一个内部使用的系统，用的技术也比较老 ssh这一套技术框架。自己对待的比较认真，老大给的任务都\n    非常认真的完成，只不过有时候，完成了也不提交代码，磨一点时间自己学习。写些CURD、封装接口、OSS使用、jenkins使用、将设计模式用到代码中 也学到了很多东西，感觉最重要的是\n    通过做这个中老的框架的东西，让我对spring、tomcat有了更好的理解，梳理了从请求发出到返回的整个过程、细节。仿照开源项目，写demo tomcat、spring等，也给\n    开源项目贡献了一次代码，虽然只是文本翻译... 这次实习过程对自己很重要，也很感谢老大\n    \n    \n- 生活\n\n生活上还是自己一个人，孤单倒不孤独，可能是真的单身习惯了；有时候去参加联谊、想要找个女朋友，但是感觉找不找得到也无所谓。并不是多放在心上，宁愿\n更多一点时间待着实验室里...<br>\n实习时候碰到一个女生，做了件好蠢的事情...<br>\n最近 感情上有碰到些问题，有点不知道自己该不该接受，有点想逃避、有点想接受...不愿多想、感觉自己又会犯错误\n\n深深的感觉到 父母因为文化问题有些愚昧，自己也成年好多年了，家里有些事情应该帮他们做主意；一转眼弟弟也上初中了，马上该上高中了，\n感觉跟当初的我一样，知道好好学习，但是也会特别想玩。有时想将自己遗憾没有做的事情，嘱咐他 想让他不要错过，但是往往事与愿违。<br>\n姨姐今年也结婚了，最开始还考虑要不要回家...看到她结婚真好<br>\n生活有条不紊，注意作息 健康饮食\n\n- 方法论\n\n这一年加深了对理论联系实践、从实践中来到实践中去的认知\n\n在学习生活中，光学习理论知识不实践、光实践不增强理论知识都不行，只有两者不同程度的并进才能达到较好的效果。\n比如，实践碰到问题了，回过头来学习理论知识，而后再实践；从实践中学习，实践中验证学到的东西，不断重复这个过程\n\n- 明年承诺\n\n1. leetcode刷300题\n2. 拿到alibaba的offer\n3. 竹笛最少两首拿手曲子\n4. 英语达到能够听明白歌曲的程度\n5. 日语学习完新标准第一册\n6. 象棋稳定业二\n","slug":"2019年终总结","published":1,"updated":"2019-12-21T06:29:33.640Z","_id":"ck4f6itpx000w73etdadq3k1w","comments":1,"layout":"post","photos":[],"link":"","content":"<p> 2019年还剩下10天，马上就要2020年了<br><br> 回想过去的这一年里，有收获、也有失落、五味杂陈。<br> <br><br> 感觉人成长变化都是由一件件事情驱动的，如果没有经过经历我还是我，很难有实质性的变化。</p>\n <a id=\"more\"></a>\n\n<p>如果说过去的2018年是由毕业到读研的一个过渡，让我重新体会到那种高中步入到大学的那种感觉；<br>这2019年感觉便是对新阶段人生的加深、熟悉、进步。</p>\n<ul>\n<li><p>学习工作</p>\n<ol>\n<li>spring实战</li>\n<li>java编程思想</li>\n<li>redis设计与实现</li>\n<li>图解http</li>\n<li>深入理解JVM</li>\n<li>大型网站技术架构</li>\n<li>程序员修炼之道</li>\n<li>effect java</li>\n<li>maven实战</li>\n<li>java8实战</li>\n<li>阿里巴巴Java开发手册</li>\n<li>netty实战（未看完）</li>\n<li>spring cloud微服务实战（未看完）</li>\n<li>高效能人士的七个习惯（未看完）</li>\n<li>亲密关系（未看完）</li>\n<li>球状闪电</li>\n<li>数不清的技术博客（自我感觉多数未消化）</li>\n</ol>\n</li>\n</ul>\n<p>这样一一列出来，发现也是读了不少书，其中以技术书籍为主。去年读研半年，课余时间算是刚刚入门，过年回来后，<br>便开始疯狂补充知识，其中有个致命的问题就是理论走在了前面 实践没有跟上。这个问题在开了新项目路边停车、在实习后<br>得到了一定程度的解决。</p>\n<p>这一年编码能力、阅读代码的能力都得到了一定程度的提高，从最开始阅读java源码都有问题、速度慢、不是特别理解等，到现在阅读速度上、理解上都有很大的提高。</p>\n<p>刷题： </p>\n<pre><code>刷题刷的有些敷衍，在牛客上刷完了剑指offer、程序员面试金典的题，暗示自我感觉效果不好。在碰到不太会的问题时就去看了解答，但是也没有回过头来\n认真思考。接下来到到寒假结束有一个半月时间，承诺自己最少在leetcode刷100题。</code></pre><p>比赛： </p>\n<pre><code>1.参加了腾讯的微信小程序比赛，最后进了复赛但是也没有拿到名次，\n2.阿里第五届中间件比赛，一开始直接懵逼了，各种不会。使劲搞了一番 616/4095,意料之内\n等赛事结束后，又进行了一波复盘 照着大佬的代码思考一番，敲出一个版本，在自适应负载均衡比赛中 45/498，还算满意\n还有一个消息队列的题目一直没吃透，抽时间再搞一稿</code></pre><p>参加比赛确实能学到很多东西，这次参加中间件比赛，接触到了很多之前不懂的东西，很有收获</p>\n<p>实习：</p>\n<pre><code>在七月份的时候，偷偷出去实习了两个月。在爱奇艺做的是一个内部使用的系统，用的技术也比较老 ssh这一套技术框架。自己对待的比较认真，老大给的任务都\n非常认真的完成，只不过有时候，完成了也不提交代码，磨一点时间自己学习。写些CURD、封装接口、OSS使用、jenkins使用、将设计模式用到代码中 也学到了很多东西，感觉最重要的是\n通过做这个中老的框架的东西，让我对spring、tomcat有了更好的理解，梳理了从请求发出到返回的整个过程、细节。仿照开源项目，写demo tomcat、spring等，也给\n开源项目贡献了一次代码，虽然只是文本翻译... 这次实习过程对自己很重要，也很感谢老大</code></pre><ul>\n<li>生活</li>\n</ul>\n<p>生活上还是自己一个人，孤单倒不孤独，可能是真的单身习惯了；有时候去参加联谊、想要找个女朋友，但是感觉找不找得到也无所谓。并不是多放在心上，宁愿<br>更多一点时间待着实验室里…<br><br>实习时候碰到一个女生，做了件好蠢的事情…<br><br>最近 感情上有碰到些问题，有点不知道自己该不该接受，有点想逃避、有点想接受…不愿多想、感觉自己又会犯错误</p>\n<p>深深的感觉到 父母因为文化问题有些愚昧，自己也成年好多年了，家里有些事情应该帮他们做主意；一转眼弟弟也上初中了，马上该上高中了，<br>感觉跟当初的我一样，知道好好学习，但是也会特别想玩。有时想将自己遗憾没有做的事情，嘱咐他 想让他不要错过，但是往往事与愿违。<br><br>姨姐今年也结婚了，最开始还考虑要不要回家…看到她结婚真好<br><br>生活有条不紊，注意作息 健康饮食</p>\n<ul>\n<li>方法论</li>\n</ul>\n<p>这一年加深了对理论联系实践、从实践中来到实践中去的认知</p>\n<p>在学习生活中，光学习理论知识不实践、光实践不增强理论知识都不行，只有两者不同程度的并进才能达到较好的效果。<br>比如，实践碰到问题了，回过头来学习理论知识，而后再实践；从实践中学习，实践中验证学到的东西，不断重复这个过程</p>\n<ul>\n<li>明年承诺</li>\n</ul>\n<ol>\n<li>leetcode刷300题</li>\n<li>拿到alibaba的offer</li>\n<li>竹笛最少两首拿手曲子</li>\n<li>英语达到能够听明白歌曲的程度</li>\n<li>日语学习完新标准第一册</li>\n<li>象棋稳定业二</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p> 2019年还剩下10天，马上就要2020年了<br><br> 回想过去的这一年里，有收获、也有失落、五味杂陈。<br> <br><br> 感觉人成长变化都是由一件件事情驱动的，如果没有经过经历我还是我，很难有实质性的变化。</p>","more":"<p>如果说过去的2018年是由毕业到读研的一个过渡，让我重新体会到那种高中步入到大学的那种感觉；<br>这2019年感觉便是对新阶段人生的加深、熟悉、进步。</p>\n<ul>\n<li><p>学习工作</p>\n<ol>\n<li>spring实战</li>\n<li>java编程思想</li>\n<li>redis设计与实现</li>\n<li>图解http</li>\n<li>深入理解JVM</li>\n<li>大型网站技术架构</li>\n<li>程序员修炼之道</li>\n<li>effect java</li>\n<li>maven实战</li>\n<li>java8实战</li>\n<li>阿里巴巴Java开发手册</li>\n<li>netty实战（未看完）</li>\n<li>spring cloud微服务实战（未看完）</li>\n<li>高效能人士的七个习惯（未看完）</li>\n<li>亲密关系（未看完）</li>\n<li>球状闪电</li>\n<li>数不清的技术博客（自我感觉多数未消化）</li>\n</ol>\n</li>\n</ul>\n<p>这样一一列出来，发现也是读了不少书，其中以技术书籍为主。去年读研半年，课余时间算是刚刚入门，过年回来后，<br>便开始疯狂补充知识，其中有个致命的问题就是理论走在了前面 实践没有跟上。这个问题在开了新项目路边停车、在实习后<br>得到了一定程度的解决。</p>\n<p>这一年编码能力、阅读代码的能力都得到了一定程度的提高，从最开始阅读java源码都有问题、速度慢、不是特别理解等，到现在阅读速度上、理解上都有很大的提高。</p>\n<p>刷题： </p>\n<pre><code>刷题刷的有些敷衍，在牛客上刷完了剑指offer、程序员面试金典的题，暗示自我感觉效果不好。在碰到不太会的问题时就去看了解答，但是也没有回过头来\n认真思考。接下来到到寒假结束有一个半月时间，承诺自己最少在leetcode刷100题。</code></pre><p>比赛： </p>\n<pre><code>1.参加了腾讯的微信小程序比赛，最后进了复赛但是也没有拿到名次，\n2.阿里第五届中间件比赛，一开始直接懵逼了，各种不会。使劲搞了一番 616/4095,意料之内\n等赛事结束后，又进行了一波复盘 照着大佬的代码思考一番，敲出一个版本，在自适应负载均衡比赛中 45/498，还算满意\n还有一个消息队列的题目一直没吃透，抽时间再搞一稿</code></pre><p>参加比赛确实能学到很多东西，这次参加中间件比赛，接触到了很多之前不懂的东西，很有收获</p>\n<p>实习：</p>\n<pre><code>在七月份的时候，偷偷出去实习了两个月。在爱奇艺做的是一个内部使用的系统，用的技术也比较老 ssh这一套技术框架。自己对待的比较认真，老大给的任务都\n非常认真的完成，只不过有时候，完成了也不提交代码，磨一点时间自己学习。写些CURD、封装接口、OSS使用、jenkins使用、将设计模式用到代码中 也学到了很多东西，感觉最重要的是\n通过做这个中老的框架的东西，让我对spring、tomcat有了更好的理解，梳理了从请求发出到返回的整个过程、细节。仿照开源项目，写demo tomcat、spring等，也给\n开源项目贡献了一次代码，虽然只是文本翻译... 这次实习过程对自己很重要，也很感谢老大</code></pre><ul>\n<li>生活</li>\n</ul>\n<p>生活上还是自己一个人，孤单倒不孤独，可能是真的单身习惯了；有时候去参加联谊、想要找个女朋友，但是感觉找不找得到也无所谓。并不是多放在心上，宁愿<br>更多一点时间待着实验室里…<br><br>实习时候碰到一个女生，做了件好蠢的事情…<br><br>最近 感情上有碰到些问题，有点不知道自己该不该接受，有点想逃避、有点想接受…不愿多想、感觉自己又会犯错误</p>\n<p>深深的感觉到 父母因为文化问题有些愚昧，自己也成年好多年了，家里有些事情应该帮他们做主意；一转眼弟弟也上初中了，马上该上高中了，<br>感觉跟当初的我一样，知道好好学习，但是也会特别想玩。有时想将自己遗憾没有做的事情，嘱咐他 想让他不要错过，但是往往事与愿违。<br><br>姨姐今年也结婚了，最开始还考虑要不要回家…看到她结婚真好<br><br>生活有条不紊，注意作息 健康饮食</p>\n<ul>\n<li>方法论</li>\n</ul>\n<p>这一年加深了对理论联系实践、从实践中来到实践中去的认知</p>\n<p>在学习生活中，光学习理论知识不实践、光实践不增强理论知识都不行，只有两者不同程度的并进才能达到较好的效果。<br>比如，实践碰到问题了，回过头来学习理论知识，而后再实践；从实践中学习，实践中验证学到的东西，不断重复这个过程</p>\n<ul>\n<li>明年承诺</li>\n</ul>\n<ol>\n<li>leetcode刷300题</li>\n<li>拿到alibaba的offer</li>\n<li>竹笛最少两首拿手曲子</li>\n<li>英语达到能够听明白歌曲的程度</li>\n<li>日语学习完新标准第一册</li>\n<li>象棋稳定业二</li>\n</ol>"},{"layout":"post","title":"使用springboot+ajax+bootstrap搭建的一个前后端耦合的个人博客项目","date":"2018-11-14T06:47:13.000Z","_content":"\n\n> 搭建的比较简陋，只是完成了基本的用户和发表博客、展示博客等功能\n\n[项目地址](https://github.com/csxiaoshang/blog)\n\n之后会继续学习springboot，了解前后端分离的使用。","source":"_posts/2018-11-14-springbootblog.md","raw":"---\nlayout: post\ntitle:  \"使用springboot+ajax+bootstrap搭建的一个前后端耦合的个人博客项目\"\ndate:   2018-11-14 14:47:13\ncategories: learning\ntags: springboot\n---\n\n\n> 搭建的比较简陋，只是完成了基本的用户和发表博客、展示博客等功能\n\n[项目地址](https://github.com/csxiaoshang/blog)\n\n之后会继续学习springboot，了解前后端分离的使用。","slug":"2018-11-14-springbootblog","published":1,"updated":"2019-12-04T14:30:33.171Z","comments":1,"photos":[],"link":"","_id":"ck4f6itpz000y73etbnsl74n7","content":"<blockquote>\n<p>搭建的比较简陋，只是完成了基本的用户和发表博客、展示博客等功能</p>\n</blockquote>\n<p><a href=\"https://github.com/csxiaoshang/blog\" target=\"_blank\" rel=\"noopener\">项目地址</a></p>\n<p>之后会继续学习springboot，了解前后端分离的使用。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>搭建的比较简陋，只是完成了基本的用户和发表博客、展示博客等功能</p>\n</blockquote>\n<p><a href=\"https://github.com/csxiaoshang/blog\" target=\"_blank\" rel=\"noopener\">项目地址</a></p>\n<p>之后会继续学习springboot，了解前后端分离的使用。</p>\n"},{"layout":"post","title":"考虑后不去参加头条实习面试","date":"2018-09-22T10:22:36.000Z","_content":"\n昨天下午收到了头条HR的电话，让过去参加面试，本来挺高兴的，寻思就算去不上，过去面试吸取下经验也是好的。\n<!--more-->\n\t\n今天正好大学同学一起聚餐，特别高兴聊了很多。也寻思去过去看看肯定是好的，回来后，打算看看头条JAVA后台的实习面经，看了几篇劝退了。\n\t\n您好，诚意邀请您参加字节跳动的面试。\n【面试时间】：2018-09-26 16:00:00\n【面试地点】：知春路甲48号盈都大厦B座10层\n【面试流程】：笔试/初试-复试-终面\n【乘车路线】：地铁10号线或13号线（知春路站B口出），西行约100米左转，前方左手边的写字楼即到。\n\t\n深深的感觉到自己水平能力还有很大欠缺，想要做好java后台开发还有很长的路要走。\n\t\n同时也很高兴自己来到了北京，这里机会真的是多。自己投了3份简历，两个让我去面试。在这种大环境下，真的是海阔凭鱼跃，天高任鸟飞。\n","source":"_posts/2018-09-22-toutiaomianshibuqu.md","raw":"---\nlayout: post\ntitle:  \"考虑后不去参加头条实习面试\"\ndate:   2018-09-22 18:22:36\ncategories: note\ntags: interview\n---\n\n昨天下午收到了头条HR的电话，让过去参加面试，本来挺高兴的，寻思就算去不上，过去面试吸取下经验也是好的。\n<!--more-->\n\t\n今天正好大学同学一起聚餐，特别高兴聊了很多。也寻思去过去看看肯定是好的，回来后，打算看看头条JAVA后台的实习面经，看了几篇劝退了。\n\t\n您好，诚意邀请您参加字节跳动的面试。\n【面试时间】：2018-09-26 16:00:00\n【面试地点】：知春路甲48号盈都大厦B座10层\n【面试流程】：笔试/初试-复试-终面\n【乘车路线】：地铁10号线或13号线（知春路站B口出），西行约100米左转，前方左手边的写字楼即到。\n\t\n深深的感觉到自己水平能力还有很大欠缺，想要做好java后台开发还有很长的路要走。\n\t\n同时也很高兴自己来到了北京，这里机会真的是多。自己投了3份简历，两个让我去面试。在这种大环境下，真的是海阔凭鱼跃，天高任鸟飞。\n","slug":"2018-09-22-toutiaomianshibuqu","published":1,"updated":"2019-12-04T14:32:19.020Z","comments":1,"photos":[],"link":"","_id":"ck4f6itq3001373et4fca9gwf","content":"<p>昨天下午收到了头条HR的电话，让过去参加面试，本来挺高兴的，寻思就算去不上，过去面试吸取下经验也是好的。</p>\n<a id=\"more\"></a>\n\n<p>今天正好大学同学一起聚餐，特别高兴聊了很多。也寻思去过去看看肯定是好的，回来后，打算看看头条JAVA后台的实习面经，看了几篇劝退了。</p>\n<p>您好，诚意邀请您参加字节跳动的面试。<br>【面试时间】：2018-09-26 16:00:00<br>【面试地点】：知春路甲48号盈都大厦B座10层<br>【面试流程】：笔试/初试-复试-终面<br>【乘车路线】：地铁10号线或13号线（知春路站B口出），西行约100米左转，前方左手边的写字楼即到。</p>\n<p>深深的感觉到自己水平能力还有很大欠缺，想要做好java后台开发还有很长的路要走。</p>\n<p>同时也很高兴自己来到了北京，这里机会真的是多。自己投了3份简历，两个让我去面试。在这种大环境下，真的是海阔凭鱼跃，天高任鸟飞。</p>\n","site":{"data":{}},"excerpt":"<p>昨天下午收到了头条HR的电话，让过去参加面试，本来挺高兴的，寻思就算去不上，过去面试吸取下经验也是好的。</p>","more":"<p>今天正好大学同学一起聚餐，特别高兴聊了很多。也寻思去过去看看肯定是好的，回来后，打算看看头条JAVA后台的实习面经，看了几篇劝退了。</p>\n<p>您好，诚意邀请您参加字节跳动的面试。<br>【面试时间】：2018-09-26 16:00:00<br>【面试地点】：知春路甲48号盈都大厦B座10层<br>【面试流程】：笔试/初试-复试-终面<br>【乘车路线】：地铁10号线或13号线（知春路站B口出），西行约100米左转，前方左手边的写字楼即到。</p>\n<p>深深的感觉到自己水平能力还有很大欠缺，想要做好java后台开发还有很长的路要走。</p>\n<p>同时也很高兴自己来到了北京，这里机会真的是多。自己投了3份简历，两个让我去面试。在这种大环境下，真的是海阔凭鱼跃，天高任鸟飞。</p>"},{"layout":"post","title":"命令模式","date":"2019-11-27T07:30:00.000Z","_content":"\n\n- 命令模式\n\n下图为命令模式类图\n![](https://raw.githubusercontent.com/csxiaoshang/images/master/bolg/images20191127153840.png)\n<br>\n<br>\n简单的看，命令模式实现了命令发起者和命令执行者的解耦，中间增加了一层调用者。\n命令组合命令执行者，调用者中维护一个命令列表，并封装命令执行方法。命令发起者则将命令添加到命令调用者中。\n\n<!--more--> \n\n```\nclass Client{\n    putCommand(Command command,Receiver receiver);\n}\n\nclass Invoker{\n    List<Command> commandList;\n    executeCommand(){\n        commandList.forEach(command->command.execute());\n    }\n}\n\ninterface Command{\n    execute();\n}\n\nclass CommandA implements Command{\n    Receiver receiver;\n    execute(){\n        receiver.action();\n    }\n}\n\nclass Receiver{\n    action(){\n        // 需要执行的业务逻辑\n    }\n}\n\n```","source":"_posts/2019-11-27-CommandPattern.md","raw":"---\nlayout: post\ntitle:  \"命令模式\"\ndate:   2019-11-27 15:30:00\ncategories: 设计模式\ntags: learning\n---\n\n\n- 命令模式\n\n下图为命令模式类图\n![](https://raw.githubusercontent.com/csxiaoshang/images/master/bolg/images20191127153840.png)\n<br>\n<br>\n简单的看，命令模式实现了命令发起者和命令执行者的解耦，中间增加了一层调用者。\n命令组合命令执行者，调用者中维护一个命令列表，并封装命令执行方法。命令发起者则将命令添加到命令调用者中。\n\n<!--more--> \n\n```\nclass Client{\n    putCommand(Command command,Receiver receiver);\n}\n\nclass Invoker{\n    List<Command> commandList;\n    executeCommand(){\n        commandList.forEach(command->command.execute());\n    }\n}\n\ninterface Command{\n    execute();\n}\n\nclass CommandA implements Command{\n    Receiver receiver;\n    execute(){\n        receiver.action();\n    }\n}\n\nclass Receiver{\n    action(){\n        // 需要执行的业务逻辑\n    }\n}\n\n```","slug":"2019-11-27-CommandPattern","published":1,"updated":"2019-11-30T07:37:13.949Z","comments":1,"photos":[],"link":"","_id":"ck4f6itq5001673ethmv32ovx","content":"<ul>\n<li>命令模式</li>\n</ul>\n<p>下图为命令模式类图<br><img src=\"https://raw.githubusercontent.com/csxiaoshang/images/master/bolg/images20191127153840.png\" alt><br><br><br><br><br>简单的看，命令模式实现了命令发起者和命令执行者的解耦，中间增加了一层调用者。<br>命令组合命令执行者，调用者中维护一个命令列表，并封装命令执行方法。命令发起者则将命令添加到命令调用者中。</p>\n<a id=\"more\"></a> \n\n<figure class=\"highlight plain hljs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">class Client&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">    putCommand(Command command,Receiver receiver);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">class Invoker&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">    List&lt;Command&gt; commandList;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">    executeCommand()&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">        commandList.forEach(command-&gt;command.execute());</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">interface Command&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">    execute();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">16</span></pre></td><td class=\"code\"><pre><span class=\"line\">class CommandA implements Command&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">17</span></pre></td><td class=\"code\"><pre><span class=\"line\">    Receiver receiver;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">18</span></pre></td><td class=\"code\"><pre><span class=\"line\">    execute()&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">19</span></pre></td><td class=\"code\"><pre><span class=\"line\">        receiver.action();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">20</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">21</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">22</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">23</span></pre></td><td class=\"code\"><pre><span class=\"line\">class Receiver&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">24</span></pre></td><td class=\"code\"><pre><span class=\"line\">    action()&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">25</span></pre></td><td class=\"code\"><pre><span class=\"line\">        &#x2F;&#x2F; 需要执行的业务逻辑</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">26</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">27</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<ul>\n<li>命令模式</li>\n</ul>\n<p>下图为命令模式类图<br><img src=\"https://raw.githubusercontent.com/csxiaoshang/images/master/bolg/images20191127153840.png\" alt><br><br><br><br><br>简单的看，命令模式实现了命令发起者和命令执行者的解耦，中间增加了一层调用者。<br>命令组合命令执行者，调用者中维护一个命令列表，并封装命令执行方法。命令发起者则将命令添加到命令调用者中。</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span></pre></td><td class=\"code\"><pre><span class=\"line\">class Client&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">2</span></pre></td><td class=\"code\"><pre><span class=\"line\">    putCommand(Command command,Receiver receiver);</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">3</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">4</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">5</span></pre></td><td class=\"code\"><pre><span class=\"line\">class Invoker&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">6</span></pre></td><td class=\"code\"><pre><span class=\"line\">    List&lt;Command&gt; commandList;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">7</span></pre></td><td class=\"code\"><pre><span class=\"line\">    executeCommand()&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">8</span></pre></td><td class=\"code\"><pre><span class=\"line\">        commandList.forEach(command-&gt;command.execute());</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">9</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">10</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">11</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">12</span></pre></td><td class=\"code\"><pre><span class=\"line\">interface Command&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">13</span></pre></td><td class=\"code\"><pre><span class=\"line\">    execute();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">14</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">15</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">16</span></pre></td><td class=\"code\"><pre><span class=\"line\">class CommandA implements Command&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">17</span></pre></td><td class=\"code\"><pre><span class=\"line\">    Receiver receiver;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">18</span></pre></td><td class=\"code\"><pre><span class=\"line\">    execute()&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">19</span></pre></td><td class=\"code\"><pre><span class=\"line\">        receiver.action();</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">20</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">21</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">22</span></pre></td><td class=\"code\"><pre><span class=\"line\"></span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">23</span></pre></td><td class=\"code\"><pre><span class=\"line\">class Receiver&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">24</span></pre></td><td class=\"code\"><pre><span class=\"line\">    action()&#123;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">25</span></pre></td><td class=\"code\"><pre><span class=\"line\">        &#x2F;&#x2F; 需要执行的业务逻辑</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">26</span></pre></td><td class=\"code\"><pre><span class=\"line\">    &#125;</span></pre></td></tr><tr><td class=\"gutter\"><pre><span class=\"line\">27</span></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;</span></pre></td></tr></table></figure>"},{"title":"双亲委派模型类加载器问题","date":"2019-12-02T11:10:04.000Z","_content":"\n下图是关于类加载顺序的总结\n\n<!--more-->\n\n![](https://raw.githubusercontent.com/csxiaoshang/images/master/bolg/image1241399721.jpg)","source":"_posts/双亲委派模型类加载器问题.md","raw":"---\ntitle: 双亲委派模型类加载器问题\ndate: 2019-12-02 19:10:04\ncategories: java\n---\n\n下图是关于类加载顺序的总结\n\n<!--more-->\n\n![](https://raw.githubusercontent.com/csxiaoshang/images/master/bolg/image1241399721.jpg)","slug":"双亲委派模型类加载器问题","published":1,"updated":"2019-12-02T11:15:13.328Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck4f6itq7001a73etc4ehb9m6","content":"<p>下图是关于类加载顺序的总结</p>\n<a id=\"more\"></a>\n\n<p><img src=\"https://raw.githubusercontent.com/csxiaoshang/images/master/bolg/image1241399721.jpg\" alt></p>\n","site":{"data":{}},"excerpt":"<p>下图是关于类加载顺序的总结</p>","more":"<p><img src=\"https://raw.githubusercontent.com/csxiaoshang/images/master/bolg/image1241399721.jpg\" alt=\"\"></p>"},{"title":"java内存分配","date":"2019-12-04T14:09:38.000Z","_content":"\n### java内存区域\n\n线程私有的：程序计数器、虚拟机栈、本地方法栈\n线程公有的：方法区、堆\n\n- 程序计数器\n\n和操作系统的程序计数器类似，用于控制程序执行步数，计算跳转内存地址\n\n- 虚拟机栈\n\n用来存储方法执行时的局部变量、动态链接、方法出口等。\n\n- 本地方法栈\n\n用来存储java JNI调用的native方法的相关信息，和虚拟机栈类似\n\n<!--more-->\n\n- 方法区\n\n用来存储常量、静态变量、类信息等信息，通俗来讲存储类的通用的模板数据\n\n- 堆\n\n存储几乎所有的实例化对象和数组，包括对象的实例变量。\n\nJava7之后，String Pool被移到堆内，因为永久代空间有限，在大量使用字符串的场景下会出现OutOfMemoryError错误\n\n- 直接内存\n\n这不是虚拟机数据区的一部分，属于堆外内存。这样可以避免在java堆和native堆中来回复制数据。\n\n### java内存模型\n\n对于线程共享的静态变量、实例变量、和构成数组对象的元素是存储在堆中，算是常说的主内存。\n而每个线程使用这些变量的时候则需要将其读取复制到自身的工作内存，处理后再写会主内存。\n所以会有变量可见性问题，即不能及时看到变化。\n对于关键字volatile来说，其修饰的变量读写直接在主内存中，不涉及到工作内存的读写，所有是保证可见性的。","source":"_posts/java内存分配.md","raw":"---\ntitle: java内存分配\ndate: 2019-12-04 22:09:38\ncategories: java\n---\n\n### java内存区域\n\n线程私有的：程序计数器、虚拟机栈、本地方法栈\n线程公有的：方法区、堆\n\n- 程序计数器\n\n和操作系统的程序计数器类似，用于控制程序执行步数，计算跳转内存地址\n\n- 虚拟机栈\n\n用来存储方法执行时的局部变量、动态链接、方法出口等。\n\n- 本地方法栈\n\n用来存储java JNI调用的native方法的相关信息，和虚拟机栈类似\n\n<!--more-->\n\n- 方法区\n\n用来存储常量、静态变量、类信息等信息，通俗来讲存储类的通用的模板数据\n\n- 堆\n\n存储几乎所有的实例化对象和数组，包括对象的实例变量。\n\nJava7之后，String Pool被移到堆内，因为永久代空间有限，在大量使用字符串的场景下会出现OutOfMemoryError错误\n\n- 直接内存\n\n这不是虚拟机数据区的一部分，属于堆外内存。这样可以避免在java堆和native堆中来回复制数据。\n\n### java内存模型\n\n对于线程共享的静态变量、实例变量、和构成数组对象的元素是存储在堆中，算是常说的主内存。\n而每个线程使用这些变量的时候则需要将其读取复制到自身的工作内存，处理后再写会主内存。\n所以会有变量可见性问题，即不能及时看到变化。\n对于关键字volatile来说，其修饰的变量读写直接在主内存中，不涉及到工作内存的读写，所有是保证可见性的。","slug":"java内存分配","published":1,"updated":"2019-12-15T13:44:31.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck4f6itqp001t73etfrpg29vb","content":"<h3 id=\"java内存区域\"><a href=\"#java内存区域\" class=\"headerlink\" title=\"java内存区域\"></a>java内存区域</h3><p>线程私有的：程序计数器、虚拟机栈、本地方法栈<br>线程公有的：方法区、堆</p>\n<ul>\n<li>程序计数器</li>\n</ul>\n<p>和操作系统的程序计数器类似，用于控制程序执行步数，计算跳转内存地址</p>\n<ul>\n<li>虚拟机栈</li>\n</ul>\n<p>用来存储方法执行时的局部变量、动态链接、方法出口等。</p>\n<ul>\n<li>本地方法栈</li>\n</ul>\n<p>用来存储java JNI调用的native方法的相关信息，和虚拟机栈类似</p>\n<a id=\"more\"></a>\n\n<ul>\n<li>方法区</li>\n</ul>\n<p>用来存储常量、静态变量、类信息等信息，通俗来讲存储类的通用的模板数据</p>\n<ul>\n<li>堆</li>\n</ul>\n<p>存储几乎所有的实例化对象和数组，包括对象的实例变量。</p>\n<p>Java7之后，String Pool被移到堆内，因为永久代空间有限，在大量使用字符串的场景下会出现OutOfMemoryError错误</p>\n<ul>\n<li>直接内存</li>\n</ul>\n<p>这不是虚拟机数据区的一部分，属于堆外内存。这样可以避免在java堆和native堆中来回复制数据。</p>\n<h3 id=\"java内存模型\"><a href=\"#java内存模型\" class=\"headerlink\" title=\"java内存模型\"></a>java内存模型</h3><p>对于线程共享的静态变量、实例变量、和构成数组对象的元素是存储在堆中，算是常说的主内存。<br>而每个线程使用这些变量的时候则需要将其读取复制到自身的工作内存，处理后再写会主内存。<br>所以会有变量可见性问题，即不能及时看到变化。<br>对于关键字volatile来说，其修饰的变量读写直接在主内存中，不涉及到工作内存的读写，所有是保证可见性的。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"java内存区域\"><a href=\"#java内存区域\" class=\"headerlink\" title=\"java内存区域\"></a>java内存区域</h3><p>线程私有的：程序计数器、虚拟机栈、本地方法栈<br>线程公有的：方法区、堆</p>\n<ul>\n<li>程序计数器</li>\n</ul>\n<p>和操作系统的程序计数器类似，用于控制程序执行步数，计算跳转内存地址</p>\n<ul>\n<li>虚拟机栈</li>\n</ul>\n<p>用来存储方法执行时的局部变量、动态链接、方法出口等。</p>\n<ul>\n<li>本地方法栈</li>\n</ul>\n<p>用来存储java JNI调用的native方法的相关信息，和虚拟机栈类似</p>","more":"<ul>\n<li>方法区</li>\n</ul>\n<p>用来存储常量、静态变量、类信息等信息，通俗来讲存储类的通用的模板数据</p>\n<ul>\n<li>堆</li>\n</ul>\n<p>存储几乎所有的实例化对象和数组，包括对象的实例变量。</p>\n<p>Java7之后，String Pool被移到堆内，因为永久代空间有限，在大量使用字符串的场景下会出现OutOfMemoryError错误</p>\n<ul>\n<li>直接内存</li>\n</ul>\n<p>这不是虚拟机数据区的一部分，属于堆外内存。这样可以避免在java堆和native堆中来回复制数据。</p>\n<h3 id=\"java内存模型\"><a href=\"#java内存模型\" class=\"headerlink\" title=\"java内存模型\"></a>java内存模型</h3><p>对于线程共享的静态变量、实例变量、和构成数组对象的元素是存储在堆中，算是常说的主内存。<br>而每个线程使用这些变量的时候则需要将其读取复制到自身的工作内存，处理后再写会主内存。<br>所以会有变量可见性问题，即不能及时看到变化。<br>对于关键字volatile来说，其修饰的变量读写直接在主内存中，不涉及到工作内存的读写，所有是保证可见性的。</p>"},{"title":"gc","date":"2019-12-05T01:42:57.000Z","_content":"\n### 判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。\n引用计数器：\n当引用计数器为零的时候，表明没用引用再指向该对象，但是引用计数器不能解决循环引用的情况；\n可达性分析：\n1. 当不能从GC Root寻找一条路径到达该对象时， 将进行第一次标记。\n2. 第一次标记后检查对象是否重写了finalize() 和是否已经被调用了finalize()方法。若没有重写finalize()方法或已经被调用，则进行回收。\n3. 在已经重写finalize()方法且未调用的情况下，将对象加入一个F-Queue 的队列中，稍后进行第二次检查。\n4. 在第二次标记之前，对象如果执行finalize()方法并完成自救，对象则不会被回收。否则完成第二次标记，进行回收。值得注意的是finalize()方法并不可靠。","source":"_posts/gc.md","raw":"---\ntitle: gc\ndate: 2019-12-05 09:42:57\ncategories: java\n---\n\n### 判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。\n引用计数器：\n当引用计数器为零的时候，表明没用引用再指向该对象，但是引用计数器不能解决循环引用的情况；\n可达性分析：\n1. 当不能从GC Root寻找一条路径到达该对象时， 将进行第一次标记。\n2. 第一次标记后检查对象是否重写了finalize() 和是否已经被调用了finalize()方法。若没有重写finalize()方法或已经被调用，则进行回收。\n3. 在已经重写finalize()方法且未调用的情况下，将对象加入一个F-Queue 的队列中，稍后进行第二次检查。\n4. 在第二次标记之前，对象如果执行finalize()方法并完成自救，对象则不会被回收。否则完成第二次标记，进行回收。值得注意的是finalize()方法并不可靠。","slug":"gc","published":1,"updated":"2019-12-21T06:30:25.252Z","_id":"ck4f6itqq001u73et1ee807bd","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。\"><a href=\"#判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。\" class=\"headerlink\" title=\"判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。\"></a>判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。</h3><p>引用计数器：<br>当引用计数器为零的时候，表明没用引用再指向该对象，但是引用计数器不能解决循环引用的情况；<br>可达性分析：</p>\n<ol>\n<li>当不能从GC Root寻找一条路径到达该对象时， 将进行第一次标记。</li>\n<li>第一次标记后检查对象是否重写了finalize() 和是否已经被调用了finalize()方法。若没有重写finalize()方法或已经被调用，则进行回收。</li>\n<li>在已经重写finalize()方法且未调用的情况下，将对象加入一个F-Queue 的队列中，稍后进行第二次检查。</li>\n<li>在第二次标记之前，对象如果执行finalize()方法并完成自救，对象则不会被回收。否则完成第二次标记，进行回收。值得注意的是finalize()方法并不可靠。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。\"><a href=\"#判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。\" class=\"headerlink\" title=\"判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。\"></a>判断对象是否存活，可以使用引用计数器或者可达性分析两种方法。</h3><p>引用计数器：<br>当引用计数器为零的时候，表明没用引用再指向该对象，但是引用计数器不能解决循环引用的情况；<br>可达性分析：</p>\n<ol>\n<li>当不能从GC Root寻找一条路径到达该对象时， 将进行第一次标记。</li>\n<li>第一次标记后检查对象是否重写了finalize() 和是否已经被调用了finalize()方法。若没有重写finalize()方法或已经被调用，则进行回收。</li>\n<li>在已经重写finalize()方法且未调用的情况下，将对象加入一个F-Queue 的队列中，稍后进行第二次检查。</li>\n<li>在第二次标记之前，对象如果执行finalize()方法并完成自救，对象则不会被回收。否则完成第二次标记，进行回收。值得注意的是finalize()方法并不可靠。</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck4f6itp5000573etbca55gh8","category_id":"ck4f6itp0000273et2kil092b","_id":"ck4f6itpg000d73etcbo17zah"},{"post_id":"ck4f6ito7000073etf4ea6iqk","category_id":"ck4f6itp0000273et2kil092b","_id":"ck4f6itpj000i73et9g24c06v"},{"post_id":"ck4f6itot000173et87pvfwim","category_id":"ck4f6itp9000773etbi9c73bu","_id":"ck4f6itpl000l73et04xfchyq"},{"post_id":"ck4f6itpf000c73et6558dbyd","category_id":"ck4f6itp9000773etbi9c73bu","_id":"ck4f6itpr000p73etaix96mfs"},{"post_id":"ck4f6itp3000473et6p9g72t6","category_id":"ck4f6itp9000773etbi9c73bu","_id":"ck4f6itpw000t73etcznrfb9a"},{"post_id":"ck4f6itp8000673et55csgnif","category_id":"ck4f6itp9000773etbi9c73bu","_id":"ck4f6itq1000z73et95h4c9au"},{"post_id":"ck4f6itps000r73et3tehfzyr","category_id":"ck4f6itp9000773etbi9c73bu","_id":"ck4f6itq5001473etgsyidrpy"},{"post_id":"ck4f6itpd000a73et3bl9azfn","category_id":"ck4f6itpv000s73et6e138crh","_id":"ck4f6itq6001773eta3vu5pid"},{"post_id":"ck4f6itpz000y73etbnsl74n7","category_id":"ck4f6itp0000273et2kil092b","_id":"ck4f6itq9001c73et3qzaakx8"},{"post_id":"ck4f6itq3001373et4fca9gwf","category_id":"ck4f6itpv000s73et6e138crh","_id":"ck4f6itqa001e73etf3al1hu7"},{"post_id":"ck4f6itpi000h73et4bg99r50","category_id":"ck4f6itq1001073et14c3h26j","_id":"ck4f6itqb001i73et9qhrad58"},{"post_id":"ck4f6itpk000j73etd7f59i7s","category_id":"ck4f6itq1001073et14c3h26j","_id":"ck4f6itqc001l73et6r9kaxzt"},{"post_id":"ck4f6itpm000o73etdsnyeafa","category_id":"ck4f6itpv000s73et6e138crh","_id":"ck4f6itqc001o73etfha651g9"},{"post_id":"ck4f6itq5001673ethmv32ovx","category_id":"ck4f6itqb001k73et3cb60hok","_id":"ck4f6itqd001r73et19e3293r"},{"post_id":"ck4f6itq7001a73etc4ehb9m6","category_id":"ck4f6itqd001p73et6npw9io2","_id":"ck4f6itqd001s73et1byj3xgc"},{"post_id":"ck4f6itqp001t73etfrpg29vb","category_id":"ck4f6itqd001p73et6npw9io2","_id":"ck4f6itqt001w73et9fa07l51"},{"post_id":"ck4f6itpx000w73etdadq3k1w","category_id":"ck4f7d4lq00006wetemqy9otq","_id":"ck4f7d4ls00016wet95s40v9h"},{"post_id":"ck4f6itqq001u73et1ee807bd","category_id":"ck4f6itqd001p73et6npw9io2","_id":"ck4f7e8f8000033et9o39hcv1"}],"PostTag":[{"post_id":"ck4f6itp5000573etbca55gh8","tag_id":"ck4f6itp3000373etayupg7k0","_id":"ck4f6itpc000973et2iohfaod"},{"post_id":"ck4f6ito7000073etf4ea6iqk","tag_id":"ck4f6itp3000373etayupg7k0","_id":"ck4f6itpe000b73etbkng5y40"},{"post_id":"ck4f6itot000173et87pvfwim","tag_id":"ck4f6itp3000373etayupg7k0","_id":"ck4f6itpi000g73et30x1f9hw"},{"post_id":"ck4f6itpi000h73et4bg99r50","tag_id":"ck4f6itp3000373etayupg7k0","_id":"ck4f6itpm000n73et2s1p9b5c"},{"post_id":"ck4f6itp3000473et6p9g72t6","tag_id":"ck4f6itpg000e73etd65199u8","_id":"ck4f6itps000q73eta6w8c0le"},{"post_id":"ck4f6itpk000j73etd7f59i7s","tag_id":"ck4f6itp3000373etayupg7k0","_id":"ck4f6itpw000v73eteehjhi0e"},{"post_id":"ck4f6itp8000673et55csgnif","tag_id":"ck4f6itpl000m73etfypbdn2q","_id":"ck4f6itpz000x73et2xe58f5u"},{"post_id":"ck4f6itps000r73et3tehfzyr","tag_id":"ck4f6itp3000373etayupg7k0","_id":"ck4f6itq2001173etbmm629i0"},{"post_id":"ck4f6itpd000a73et3bl9azfn","tag_id":"ck4f6itpw000u73et7fcac2xm","_id":"ck4f6itq5001573etfdb123mk"},{"post_id":"ck4f6itq3001373et4fca9gwf","tag_id":"ck4f6itpw000u73et7fcac2xm","_id":"ck4f6itq6001873etc7n52f7u"},{"post_id":"ck4f6itq5001673ethmv32ovx","tag_id":"ck4f6itp3000373etayupg7k0","_id":"ck4f6itq9001d73etfbqw7oag"},{"post_id":"ck4f6itpf000c73et6558dbyd","tag_id":"ck4f6itq2001273eth4zfh2z9","_id":"ck4f6itqa001f73et09qccf9i"},{"post_id":"ck4f6itpm000o73etdsnyeafa","tag_id":"ck4f6itpw000u73et7fcac2xm","_id":"ck4f6itqb001j73eta4jkc5g8"},{"post_id":"ck4f6itpz000y73etbnsl74n7","tag_id":"ck4f6itqc001m73et6jsehxy3","_id":"ck4f6itqd001q73ethp3lfn0y"}],"Tag":[{"name":"learning","_id":"ck4f6itp3000373etayupg7k0"},{"name":"learning set","_id":"ck4f6itpg000e73etd65199u8"},{"name":"learning Array","_id":"ck4f6itpl000m73etfypbdn2q"},{"name":"interview","_id":"ck4f6itpw000u73et7fcac2xm"},{"name":"stack","_id":"ck4f6itq2001273eth4zfh2z9"},{"name":"程序人生","_id":"ck4f6itqa001h73et73euh6to"},{"name":"springboot","_id":"ck4f6itqc001m73et6jsehxy3"},{"name":"java","_id":"ck4f6itqt001v73et6giueg1t"}]}}